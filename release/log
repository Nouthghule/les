x^2 + 12x + 1 = 2x^2 + 10*2
x^2 + 12x + 1 = 2x^2 + 10*2
x^2 + 12x + 1 = 2x^2 + 10*2
x^2 + 12x + 1 = 2x^2 + 10*2
tparser ( x ^ 2 + 12 * x + 1 = 2 * x ^ 2 + 10 * 2 )
tparser ( x ^ 2 + 12 * x + 1 = 2 * x ^ 2 + 10 * 2 )
ready S : ( x ^ 2 + 12 * x + 1 = 2 * x ^ 2 + 10 * 2 ) 
operators push (
members push x
operators push ^
new op ^ vs last op (
members push 2
operators push +
new op + vs last op ^
operators pop +
operators pop ^
operators undo pop before the last pop.
new op + vs last op (
members push 12
operators push *
new op * vs last op +
members push x
operators push +
new op + vs last op *
operators pop +
operators pop *
operators undo pop before the last pop.
new op + vs last op +
operators pop +
operators pop +
operators undo pop before the last pop.
new op + vs last op (
members push 1
operators push =
new op = vs last op +
operators pop =
operators pop +
operators undo pop before the last pop.
new op = vs last op (
operators pop =
operators pop (
operators return back :  ( =
members push 2
operators push *
new op * vs last op =
members push x
operators push ^
new op ^ vs last op *
members push 2
operators push +
new op + vs last op ^
operators pop +
operators pop ^
operators undo pop before the last pop.
new op + vs last op *
operators pop +
operators pop *
operators undo pop before the last pop.
new op + vs last op =
members push 10
operators push *
new op * vs last op +
members push 2
operators push )
operators pop : )
operators pop into execute
operators pop into execute
operators pop into execute
operators pop : (
x 2 ^ 12 x * + 1 + 2 x 2 ^ * 10 2 * + =
 ((x)^(2)) 12 x * + 1 + 2 x 2 ^ * 10 2 * + = 
 ((x)^(2)) ((12)*(x)) + 1 + 2 x 2 ^ * 10 2 * + = 
 ((((x)^(2)))+(((12)*(x)))) 1 + 2 x 2 ^ * 10 2 * + = 
 ((((((x)^(2)))+(((12)*(x)))))+(1)) 2 x 2 ^ * 10 2 * + = 
 ((((((x)^(2)))+(((12)*(x)))))+(1)) 2 ((x)^(2)) * 10 2 * + = 
 ((((((x)^(2)))+(((12)*(x)))))+(1)) ((2)*(((x)^(2)))) 10 2 * + = 
 ((((((x)^(2)))+(((12)*(x)))))+(1)) ((2)*(((x)^(2)))) ((10)*(2)) + = 
 ((((((x)^(2)))+(((12)*(x)))))+(1)) ((((2)*(((x)^(2)))))+(((10)*(2)))) = 
 ((((((((x)^(2)))+(((12)*(x)))))+(1)))=(((((2)*(((x)^(2)))))+(((10)*(2)))))) 
Parsing ex from  ((((((((x)^(2)))+(((12)*(x)))))+(1)))=(((((2)*(((x)^(2)))))+(((10)*(2)))))) 
TP:Start of new ex.
TP:Start of new ex.
TP:Start of new ex.
TP:Start of new ex.
TP:Start of new ex.
TP:Start of new ex.
TP:Start of new ex.
TP:Start of new ex.
TP:default x
TP: end of ex of x
TP:default ^
TP:Start of new ex.
TP:default 2
TP: end of ex of 2
TP: end of ex of 
TP: end of ex of 
TP:default +
TP:Start of new ex.
TP:Start of new ex.
TP:Start of new ex.
TP:default 1
TP:default 2
TP: end of ex of 12
TP:default *
TP:Start of new ex.
TP:default x
TP: end of ex of x
TP: end of ex of 
TP: end of ex of 
TP: end of ex of 
TP: end of ex of 
TP:default +
TP:Start of new ex.
TP:default 1
TP: end of ex of 1
TP: end of ex of 
TP: end of ex of 
TP:default =
TP:Start of new ex.
TP:Start of new ex.
TP:Start of new ex.
TP:Start of new ex.
TP:Start of new ex.
TP:default 2
TP: end of ex of 2
TP:default *
TP:Start of new ex.
TP:Start of new ex.
TP:Start of new ex.
TP:default x
TP: end of ex of x
TP:default ^
TP:Start of new ex.
TP:default 2
TP: end of ex of 2
TP: end of ex of 
TP: end of ex of 
TP: end of ex of 
TP: end of ex of 
TP:default +
TP:Start of new ex.
TP:Start of new ex.
TP:Start of new ex.
TP:default 1
TP:default 0
TP: end of ex of 10
TP:default *
TP:Start of new ex.
TP:default 2
TP: end of ex of 2
TP: end of ex of 
TP: end of ex of 
TP: end of ex of 
TP: end of ex of 
TP: end of ex of 
DE replaceself x
DE replaceself numeric 2
DE Blank value with rs of ^ and val of ((x)^(2))
DE Blank value with rs of ^ and val of ((x)^(2))
DE Blank value with rs of $ and val of (((x)^(2)))
DE replacing self with only child! : ((x)^(2))
DE Blank value with rs of $ and val of (((x)^(2)))
DE replacing self with only child! : ((x)^(2))
DE replaceself numeric 12
DE replaceself x
DE Blank value with rs of * and val of ((12)*(x))
DE Blank value with rs of * and val of ((12)*(x))
DE Blank value with rs of $ and val of (((12)*(x)))
DE replacing self with only child! : ((12)*(x))
DE Blank value with rs of $ and val of (((12)*(x)))
DE replacing self with only child! : ((12)*(x))
DE Blank value with rs of + and val of (((x)^(2))+((12)*(x)))
DE Blank value with rs of + and val of (((x)^(2))+((12)*(x)))
DE Blank value with rs of $ and val of ((((12)*(x))+((x)^(2))))
DE replacing self with only child! : (((12)*(x))+((x)^(2)))
DE Blank value with rs of $ and val of ((((12)*(x))+((x)^(2))))
DE replacing self with only child! : (((12)*(x))+((x)^(2)))
DE replaceself numeric 1
DE Blank value with rs of + and val of ((((12)*(x))+((x)^(2)))+(1))
DE Blank value with rs of + and val of ((((12)*(x))+((x)^(2)))+(1))
DE Blank value with rs of $ and val of (((1)+(((12)*(x))+((x)^(2)))))
DE replacing self with only child! : ((1)+(((12)*(x))+((x)^(2))))
DE Blank value with rs of $ and val of (((1)+((12)*(x))+((x)^(2))))
DE replacing self with only child! : ((1)+((12)*(x))+((x)^(2)))
DE Blank value with rs of $ and val of (((1)+((12)*(x))+((x)^(2))))
DE replacing self with only child! : ((1)+((12)*(x))+((x)^(2)))
DE replaceself numeric 2
DE replaceself x
DE replaceself numeric 2
DE Blank value with rs of ^ and val of ((x)^(2))
DE Blank value with rs of ^ and val of ((x)^(2))
DE Blank value with rs of $ and val of (((x)^(2)))
DE replacing self with only child! : ((x)^(2))
DE Blank value with rs of $ and val of (((x)^(2)))
DE replacing self with only child! : ((x)^(2))
DE Blank value with rs of * and val of ((2)*((x)^(2)))
DE Blank value with rs of * and val of ((2)*((x)^(2)))
DE Blank value with rs of $ and val of (((2)*((x)^(2))))
DE replacing self with only child! : ((2)*((x)^(2)))
DE Blank value with rs of $ and val of (((2)*((x)^(2))))
DE replacing self with only child! : ((2)*((x)^(2)))
DE replaceself numeric 10
DE replaceself numeric 2
DE Blank value with rs of * and val of ((10)*(2))
DE Blank value with rs of * and val of ((10)*(2))
DE Blank value with rs of $ and val of (((10)*(2)))
DE replacing self with only child! : ((10)*(2))
DE Blank value with rs of $ and val of (((10)*(2)))
DE replacing self with only child! : ((10)*(2))
DE Blank value with rs of + and val of (((2)*((x)^(2)))+((10)*(2)))
DE Blank value with rs of + and val of (((2)*((x)^(2)))+((10)*(2)))
DE Blank value with rs of $ and val of ((((10)*(2))+((2)*((x)^(2)))))
DE replacing self with only child! : (((10)*(2))+((2)*((x)^(2))))
DE Blank value with rs of $ and val of ((((10)*(2))+((2)*((x)^(2)))))
DE replacing self with only child! : (((10)*(2))+((2)*((x)^(2))))
DE Blank value with rs of = and val of (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
DE Blank value with rs of = and val of (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
DE Blank value with rs of $ and val of ((((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2))))))
DE replacing self with only child! : (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
DE Blank value with rs of $ and val of ((((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2))))))
DE replacing self with only child! : (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
TextParser returning : (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
Parsed ex as : (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
#hf 30000
#hf 30018
#hf 30018
startingstate hfval is 30018
=====================================STATE 1 , generation 0
CurrState is (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
It's hf is 30018
It's parent's operator is : nouth.les.DefOperator@4d7e1886
It's operator is : nouth.les.DefOperator@4d7e1886
I'm (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2))))) and I'm about to propagate.
EqEx : ((1)+((12)*(x))+((x)^(2))) is suggesting alterators now.
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((x)^(2))
nouth.les.AlteratorAdd@279f2327
adding it.
nouth.les.AlteratorAdd@2ff4acd0
adding it.
EqEx : (((10)*(2))+((2)*((x)^(2)))) is suggesting alterators now.
nouth.les.AlteratorAdd@54bedef2
adding it.
nouth.les.AlteratorAdd@5caf905d
adding it.
nouth.les.MultiCruncherPlain@27716f4 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
into val 1
nouth.les.MultiCruncherPlain@27716f4 has brought me a new dirty child : (((1)+((12)*(x))+((x)^(2)))=(((20))+((2)*((x)^(2)))))
State polishing child : (((1)+((12)*(x))+((x)^(2)))=(((20))+((2)*((x)^(2)))))
nouth.les.MultiCruncherExpand@8efb846 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@30f39991 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
mcd worklist (12)
mcd worklist (x)
mcd worklist (10)
mcd worklist (2)
mcd worklist (2)
mcd worklist ((x)^(2))
into val 0
nouth.les.MultiCruncherNumerator@4a574795 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
into val 0
nouth.les.MultiCruncherPowerise@f6f4d33 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
MCP adding (12)
MCP adding (x)
MCP res ((12)*(x))
MCP adding (10)
MCP adding (2)
MCP res ((10)*(2))
MCP adding (2)
MCP adding ((x)^(2))
MCP res ((2)*((x)^(2)))
into val 3
nouth.les.MultiCruncherPowerise@f6f4d33 has brought me a new dirty child : (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
State polishing child : (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
nouth.les.PowerCruncherExpand@4f023edb is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
into val 2
nouth.les.PowerCruncherExpand@4f023edb has brought me a new dirty child : (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*((x)*(x)))))
State polishing child : (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*((x)*(x)))))
nouth.les.AddCruncherEqual@3a71f4dd is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
ACE rwif ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
comparing((x)) to (((x)^(2)))
ACE rwif ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
into val 0
nouth.les.AddCruncherSingleDenominator@7adf9f5f is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
ACSD 0 not addex (1)
ACSD 0 not addex (12)
ACSD 0 not addex (x)
ACSD 0 not addex ((12)*(x))
ACSD 0 not addex (x)
ACSD 0 not addex (2)
ACSD 0 not addex ((x)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((x)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)^(2))))
ACSD 0 deno is 1 of ((1)+((12)*(x))+((x)^(2)))
ACSD 0 not addex (10)
ACSD 0 not addex (2)
ACSD 0 not addex ((10)*(2))
ACSD 0 not addex (2)
ACSD 0 not addex (x)
ACSD 0 not addex (2)
ACSD 0 not addex ((x)^(2))
ACSD 0 not addex ((2)*((x)^(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*((x)^(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*((x)^(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*((x)^(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*((x)^(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*((x)^(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*((x)^(2)))))
ACSD 0 deno is 1 of (((10)*(2))+((2)*((x)^(2))))
ACSD 0 not addex (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
into val 0
nouth.les.MultiCruncherPlain@5674cd4d is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
into val 1
nouth.les.MultiCruncherPlain@5674cd4d has brought me a new dirty child : (((1)+((12)*(x))+((x)^(2)))=(((20))+((2)*((x)^(2)))))
State polishing child : (((1)+((12)*(x))+((x)^(2)))=(((20))+((2)*((x)^(2)))))
nouth.les.MultiCruncherExpand@63961c42 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@65b54208 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
mcd worklist (12)
mcd worklist (x)
mcd worklist (10)
mcd worklist (2)
mcd worklist (2)
mcd worklist ((x)^(2))
into val 0
nouth.les.MultiCruncherNumerator@1be6f5c3 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
into val 0
nouth.les.MultiCruncherPowerise@6b884d57 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
MCP adding (12)
MCP adding (x)
MCP res ((12)*(x))
MCP adding (10)
MCP adding (2)
MCP res ((10)*(2))
MCP adding (2)
MCP adding ((x)^(2))
MCP res ((2)*((x)^(2)))
into val 3
nouth.les.MultiCruncherPowerise@6b884d57 has brought me a new dirty child : (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
State polishing child : (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
nouth.les.PowerCruncherExpand@38af3868 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
into val 2
nouth.les.PowerCruncherExpand@38af3868 has brought me a new dirty child : (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*((x)*(x)))))
State polishing child : (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*((x)*(x)))))
nouth.les.MultiCruncherPlain@77459877 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
into val 1
nouth.les.MultiCruncherPlain@77459877 has brought me a new dirty child : (((1)+((12)*(x))+((x)^(2)))=(((20))+((2)*((x)^(2)))))
State polishing child : (((1)+((12)*(x))+((x)^(2)))=(((20))+((2)*((x)^(2)))))
nouth.les.MultiCruncherExpand@5b2133b1 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@72ea2f77 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
mcd worklist (12)
mcd worklist (x)
mcd worklist (10)
mcd worklist (2)
mcd worklist (2)
mcd worklist ((x)^(2))
into val 0
nouth.les.MultiCruncherNumerator@33c7353a is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
into val 0
nouth.les.MultiCruncherPowerise@681a9515 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
MCP adding (12)
MCP adding (x)
MCP res ((12)*(x))
MCP adding (10)
MCP adding (2)
MCP res ((10)*(2))
MCP adding (2)
MCP adding ((x)^(2))
MCP res ((2)*((x)^(2)))
into val 3
nouth.les.MultiCruncherPowerise@681a9515 has brought me a new dirty child : (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
State polishing child : (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
nouth.les.AddCruncherEqual@3af49f1c is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
ACE rwif ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
comparing((x)) to (((x)^(2)))
ACE rwif ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
into val 0
nouth.les.AddCruncherSingleDenominator@19469ea2 is messing around now.
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
ACSD 0 not addex (1)
ACSD 0 not addex (12)
ACSD 0 not addex (x)
ACSD 0 not addex ((12)*(x))
ACSD 0 not addex (x)
ACSD 0 not addex (2)
ACSD 0 not addex ((x)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((x)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)^(2))))
ACSD 0 deno is 1 of ((1)+((12)*(x))+((x)^(2)))
ACSD 0 not addex (10)
ACSD 0 not addex (2)
ACSD 0 not addex ((10)*(2))
ACSD 0 not addex (2)
ACSD 0 not addex (x)
ACSD 0 not addex (2)
ACSD 0 not addex ((x)^(2))
ACSD 0 not addex ((2)*((x)^(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*((x)^(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*((x)^(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*((x)^(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*((x)^(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*((x)^(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*((x)^(2)))))
ACSD 0 deno is 1 of (((10)*(2))+((2)*((x)^(2))))
ACSD 0 not addex (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
into val 0
nouth.les.AlteratorAdd@279f2327 is messing around now.
It's altEx is (((-1)*((x)^(2)))+((-1)*(12)*(x)))
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
ACE rwif ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif ((x))
comparing((x)) to ((x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to (((x)^(2)))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((x)^(2)))
ACE rwif ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif ()
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ()
ACE rwif ((x))
comparing((x)) to ()
ACE rwif (((x)^(2)))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to (((x)^(2)))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
into val 1
nouth.les.AlteratorAdd@279f2327 has brought me a new dirty child : ((((0)*((x)^(2)))+((0)*(x))+((1)))=(((-12)*(x))+((1)*((x)^(2)))+((20))))
State polishing child : ((((0)*((x)^(2)))+((0)*(x))+((1)))=(((-12)*(x))+((1)*((x)^(2)))+((20))))
nouth.les.AlteratorAdd@2ff4acd0 is messing around now.
It's altEx is (((-1)*(1)))
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
comparing((x)) to (((x)^(2)))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
into val 1
nouth.les.AlteratorAdd@2ff4acd0 has brought me a new dirty child : ((((0))+((1)*((x)^(2)))+((12)*(x)))=(((19))+((2)*((x)^(2)))))
State polishing child : ((((0))+((1)*((x)^(2)))+((12)*(x)))=(((19))+((2)*((x)^(2)))))
nouth.les.AlteratorAdd@54bedef2 is messing around now.
It's altEx is (((-1)*(2)*((x)^(2))))
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
ACE rwif ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to (((x)^(2)))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((x)^(2)))
ACE rwif ()
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ()
ACE rwif (((x)^(2)))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to (((x)^(2)))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
into val 1
nouth.les.AlteratorAdd@54bedef2 has brought me a new dirty child : ((((-1)*((x)^(2)))+((1))+((12)*(x)))=(((0)*((x)^(2)))+((20))))
State polishing child : ((((-1)*((x)^(2)))+((1))+((12)*(x)))=(((0)*((x)^(2)))+((20))))
nouth.les.AlteratorAdd@5caf905d is messing around now.
It's altEx is (((-1)*(10)*(2)))
on child (((1)+((12)*(x))+((x)^(2)))=(((10)*(2))+((2)*((x)^(2)))))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
comparing((x)) to (((x)^(2)))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
into val 1
nouth.les.AlteratorAdd@5caf905d has brought me a new dirty child : ((((-19))+((1)*((x)^(2)))+((12)*(x)))=(((0))+((2)*((x)^(2)))))
State polishing child : ((((-19))+((1)*((x)^(2)))+((12)*(x)))=(((0))+((2)*((x)^(2)))))
It just propagated.
#hf 30000
#hf 30016
#hf 31016
#hf 20000
#hf 20017
#hf 21017
#hf 20000
#hf 20010
#hf 21010
#hf 30000
#hf 30015
#hf 31015
#hf 30000
#hf 30012
#hf 31012
#hf 20000
#hf 20014
#hf 21014
New unique children : <(((1)+((12)*(x))+((x)^(2)))=((20)+((2)*((x)^(2))))) ; (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x)))) ; ((1)=((20)+((-12)*(x))+((x)^(2)))) ; ((((12)*(x))+((x)^(2)))=((19)+((2)*((x)^(2))))) ; (((1)+((-1)*((x)^(2)))+((12)*(x)))=(20)) ; (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2)))) ; >
Children hfs : <31016 ; 21017 ; 21010 ; 31015 ; 31012 ; 21014 ; >
Children ops : <nouth.les.MultiCruncherPlain@27716f4nouth.les.PowerCruncherExpand@4f023edbnouth.les.AlteratorAdd@279f2327nouth.les.AlteratorAdd@2ff4acd0nouth.les.AlteratorAdd@54bedef2nouth.les.AlteratorAdd@5caf905d>
=====================================STATE 2 , generation 1
CurrState is ((1)=((20)+((-12)*(x))+((x)^(2))))
It's hf is 21010
It's parent's operator is : nouth.les.DefOperator@4d7e1886
It's operator is : nouth.les.AlteratorAdd@279f2327
I'm ((1)=((20)+((-12)*(x))+((x)^(2)))) and I'm about to propagate.
EqEx : (1) is suggesting alterators now.
EqEx : ((20)+((-12)*(x))+((x)^(2))) is suggesting alterators now.
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (20)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((x)^(2))
nouth.les.AlteratorAdd@13221655
adding it.
nouth.les.AlteratorAdd@2f2c9b19
adding it.
nouth.les.MultiCruncherPlain@31befd9f is messing around now.
on child ((1)=((20)+((-12)*(x))+((x)^(2))))
into val 0
nouth.les.MultiCruncherExpand@1c20c684 is messing around now.
on child ((1)=((20)+((-12)*(x))+((x)^(2))))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@1fb3ebeb is messing around now.
on child ((1)=((20)+((-12)*(x))+((x)^(2))))
mcd worklist (-12)
mcd worklist (x)
into val 0
nouth.les.MultiCruncherNumerator@548c4f57 is messing around now.
on child ((1)=((20)+((-12)*(x))+((x)^(2))))
into val 0
nouth.les.MultiCruncherPowerise@1218025c is messing around now.
on child ((1)=((20)+((-12)*(x))+((x)^(2))))
MCP adding (-12)
MCP adding (x)
MCP res ((-12)*(x))
into val 1
nouth.les.MultiCruncherPowerise@1218025c has brought me a new dirty child : ((1)=((20)+((-12)*(x))+((x)^(2))))
State polishing child : ((1)=((20)+((-12)*(x))+((x)^(2))))
nouth.les.PowerCruncherExpand@816f27d is messing around now.
on child ((1)=((20)+((-12)*(x))+((x)^(2))))
into val 1
nouth.les.PowerCruncherExpand@816f27d has brought me a new dirty child : ((1)=((20)+((-12)*(x))+((x)*(x))))
State polishing child : ((1)=((20)+((-12)*(x))+((x)*(x))))
nouth.les.AddCruncherEqual@87aac27 is messing around now.
on child ((1)=((20)+((-12)*(x))+((x)^(2))))
ACE rwif ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
comparing((x)) to (((x)^(2)))
into val 0
nouth.les.AddCruncherSingleDenominator@3e3abc88 is messing around now.
on child ((1)=((20)+((-12)*(x))+((x)^(2))))
ACSD 0 not addex (1)
ACSD 0 not addex (20)
ACSD 0 not addex (-12)
ACSD 0 not addex (x)
ACSD 0 not addex ((-12)*(x))
ACSD 0 not addex (x)
ACSD 0 not addex (2)
ACSD 0 not addex ((x)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (20)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((x)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((20)+((-12)*(x))+((x)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((20)+((-12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((20)+((-12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((20)+((-12)*(x))+((x)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((20)+((-12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((20)+((-12)*(x))+((x)^(2))))
ACSD 0 deno is 1 of ((20)+((-12)*(x))+((x)^(2)))
ACSD 0 not addex ((1)=((20)+((-12)*(x))+((x)^(2))))
into val 0
nouth.les.AlteratorAdd@13221655 is messing around now.
It's altEx is (((-1)*((x)^(2)))+((-1)*(-12)*(x)))
on child ((1)=((20)+((-12)*(x))+((x)^(2))))
ACE rwif ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif ((x))
comparing((x)) to ((x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to (((x)^(2)))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
into val 1
nouth.les.AlteratorAdd@13221655 has brought me a new dirty child : ((((1))+((-1)*((x)^(2)))+((12)*(x)))=(((0)*((x)^(2)))+((0)*(x))+((20))))
State polishing child : ((((1))+((-1)*((x)^(2)))+((12)*(x)))=(((0)*((x)^(2)))+((0)*(x))+((20))))
nouth.les.AlteratorAdd@2f2c9b19 is messing around now.
It's altEx is (((-1)*(20)))
on child ((1)=((20)+((-12)*(x))+((x)^(2))))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
comparing((x)) to (((x)^(2)))
into val 1
nouth.les.AlteratorAdd@2f2c9b19 has brought me a new dirty child : ((((-19)))=(((-12)*(x))+((0))+((1)*((x)^(2)))))
State polishing child : ((((-19)))=(((-12)*(x))+((0))+((1)*((x)^(2)))))
It just propagated.
#hf 20000
#hf 20010
#hf 22010
#hf 20000
#hf 20009
#hf 22009
New unique children : <((1)=((20)+((-12)*(x))+((x)*(x)))) ; ((-19)=(((-12)*(x))+((x)^(2)))) ; >
Children hfs : <22010 ; 22009 ; >
Children ops : <nouth.les.PowerCruncherExpand@816f27dnouth.les.AlteratorAdd@2f2c9b19>
=====================================STATE 3 , generation 1
CurrState is (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
It's hf is 21014
It's parent's operator is : nouth.les.DefOperator@4d7e1886
It's operator is : nouth.les.AlteratorAdd@5caf905d
I'm (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2)))) and I'm about to propagate.
EqEx : ((-19)+((12)*(x))+((x)^(2))) is suggesting alterators now.
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((x)^(2))
nouth.les.AlteratorAdd@6ce253f1
adding it.
nouth.les.AlteratorAdd@53d8d10a
adding it.
EqEx : ((2)*((x)^(2))) is suggesting alterators now.
MultiEx suggestAlts : ((2)*((x)^(2))) suggesting now.
ME sA checking (2)
ME sA multied by (2) into ((2))
ME sA checking ((x)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((2))
nouth.les.AlteratorDiv@7229724f
adding it.
nouth.les.MultiCruncherPlain@4c873330 is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
into val 0
nouth.les.MultiCruncherExpand@119d7047 is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@776ec8df is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
mcd worklist (12)
mcd worklist (x)
mcd worklist (2)
mcd worklist ((x)^(2))
into val 0
nouth.les.MultiCruncherNumerator@4eec7777 is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
into val 0
nouth.les.MultiCruncherPowerise@3b07d329 is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
MCP adding (12)
MCP adding (x)
MCP res ((12)*(x))
MCP adding (2)
MCP adding ((x)^(2))
MCP res ((2)*((x)^(2)))
into val 2
nouth.les.MultiCruncherPowerise@3b07d329 has brought me a new dirty child : (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
State polishing child : (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
nouth.les.PowerCruncherExpand@41629346 is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
into val 2
nouth.les.PowerCruncherExpand@41629346 has brought me a new dirty child : (((-19)+((12)*(x))+((x)*(x)))=((2)*((x)*(x))))
State polishing child : (((-19)+((12)*(x))+((x)*(x)))=((2)*((x)*(x))))
nouth.les.AddCruncherEqual@404b9385 is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
ACE rwif ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
comparing((x)) to (((x)^(2)))
into val 0
nouth.les.AddCruncherSingleDenominator@6d311334 is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
ACSD 0 not addex (-19)
ACSD 0 not addex (12)
ACSD 0 not addex (x)
ACSD 0 not addex ((12)*(x))
ACSD 0 not addex (x)
ACSD 0 not addex (2)
ACSD 0 not addex ((x)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((x)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-19)+((12)*(x))+((x)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-19)+((12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-19)+((12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-19)+((12)*(x))+((x)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-19)+((12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-19)+((12)*(x))+((x)^(2))))
ACSD 0 deno is 1 of ((-19)+((12)*(x))+((x)^(2)))
ACSD 0 not addex (2)
ACSD 0 not addex (x)
ACSD 0 not addex (2)
ACSD 0 not addex ((x)^(2))
ACSD 0 not addex ((2)*((x)^(2)))
ACSD 0 not addex (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
into val 0
nouth.les.PowerCruncherExpand@682a0b20 is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
into val 2
nouth.les.PowerCruncherExpand@682a0b20 has brought me a new dirty child : (((-19)+((12)*(x))+((x)*(x)))=((2)*((x)*(x))))
State polishing child : (((-19)+((12)*(x))+((x)*(x)))=((2)*((x)*(x))))
nouth.les.MultiCruncherPlain@3d075dc0 is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
into val 0
nouth.les.MultiCruncherExpand@214c265e is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@448139f0 is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
mcd worklist (12)
mcd worklist (x)
mcd worklist (2)
mcd worklist ((x)^(2))
into val 0
nouth.les.MultiCruncherNumerator@7cca494b is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
into val 0
nouth.les.MultiCruncherPowerise@7ba4f24f is messing around now.
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
MCP adding (12)
MCP adding (x)
MCP res ((12)*(x))
MCP adding (2)
MCP adding ((x)^(2))
MCP res ((2)*((x)^(2)))
into val 2
nouth.les.MultiCruncherPowerise@7ba4f24f has brought me a new dirty child : (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
State polishing child : (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
nouth.les.AlteratorAdd@6ce253f1 is messing around now.
It's altEx is (((-1)*((x)^(2)))+((-1)*(12)*(x)))
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
ACE rwif ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif ((x))
comparing((x)) to ((x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to (((x)^(2)))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((x)^(2)))
ACE rwif ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif (((x)^(2)))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to (((x)^(2)))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
into val 1
nouth.les.AlteratorAdd@6ce253f1 has brought me a new dirty child : ((((-19))+((0)*((x)^(2)))+((0)*(x)))=(((-12)*(x))+((1)*((x)^(2)))))
State polishing child : ((((-19))+((0)*((x)^(2)))+((0)*(x)))=(((-12)*(x))+((1)*((x)^(2)))))
nouth.les.AlteratorAdd@53d8d10a is messing around now.
It's altEx is (((-1)*(-19)))
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
comparing((x)) to (((x)^(2)))
ACE rwif ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
into val 1
nouth.les.AlteratorAdd@53d8d10a has brought me a new dirty child : ((((0))+((1)*((x)^(2)))+((12)*(x)))=(((19))+((2)*((x)^(2)))))
State polishing child : ((((0))+((1)*((x)^(2)))+((12)*(x)))=(((19))+((2)*((x)^(2)))))
nouth.les.AlteratorDiv@7229724f is messing around now.
It's altEx is (2)
on child (((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
AD pre(((-19)+((12)*(x))+((x)^(2)))=((2)*((x)^(2))))
AD prep((((-19)+((12)*(x))+((x)^(2)))/(2))=(((2)*((x)^(2)))/(2)))
AD presimp((((-19)+((12)*(x))+((x)^(2)))/(2))=(((2)*((x)^(2)))/(2)))
DCSN in : (((-19)+((12)*(x))+((x)^(2)))/(2))
DCSN dealt : (((-19)+((12)*(x))+((x)^(2)))/(2))
DCSN listadd(((-19)+((12)*(x))+((x)^(2)))^(1))
DCSN listadd((2)^(1))
DCSN in : (((2)*((x)^(2)))/(2))
DCSN dealt : (((x)^(2))/(1))
DCSN listadd((x)^(2))
DCSN listadd((1)^(1))
AD post(((((-19)+((12)*(x))+((x)^(2)))^(1))/((2)^(1)))=((x)^(2)))
into val 1
nouth.les.AlteratorDiv@7229724f has brought me a new dirty child : (((((-19)+((12)*(x))+((x)^(2)))^(1))/((2)^(1)))=((x)^(2)))
State polishing child : (((((-19)+((12)*(x))+((x)^(2)))^(1))/((2)^(1)))=((x)^(2)))
It just propagated.
#hf 20000
#hf 20013
#hf 22013
#hf 30000
#hf 30014
#hf 32014
New unique children : <(((-19)+((12)*(x))+((x)*(x)))=((2)*(x)*(x))) ; ((((-19)+((12)*(x))+((x)^(2)))/(2))=((x)^(2))) ; >
Children hfs : <22013 ; 32014 ; >
Children ops : <nouth.les.PowerCruncherExpand@41629346nouth.les.AlteratorDiv@7229724f>
=====================================STATE 4 , generation 1
CurrState is (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
It's hf is 21017
It's parent's operator is : nouth.les.DefOperator@4d7e1886
It's operator is : nouth.les.PowerCruncherExpand@4f023edb
I'm (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x)))) and I'm about to propagate.
EqEx : ((1)+((12)*(x))+((x)*(x))) is suggesting alterators now.
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (1)
nouth.les.AlteratorAdd@3b9a45b3
adding it.
nouth.les.AlteratorAdd@7699a589
adding it.
EqEx : (((10)*(2))+((2)*(x)*(x))) is suggesting alterators now.
nouth.les.AlteratorAdd@58372a00
adding it.
nouth.les.AlteratorAdd@4dd8dc3
adding it.
nouth.les.MultiCruncherPlain@6d03e736 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
into val 1
nouth.les.MultiCruncherPlain@6d03e736 has brought me a new dirty child : (((1)+((12)*(x))+((x)*(x)))=(((20))+((2)*(x)*(x))))
State polishing child : (((1)+((12)*(x))+((x)*(x)))=(((20))+((2)*(x)*(x))))
nouth.les.MultiCruncherExpand@568db2f2 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@378bf509 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
mcd worklist (12)
mcd worklist (x)
mcd worklist (x)
mcd worklist (x)
mcd worklist (10)
mcd worklist (2)
mcd worklist (2)
mcd worklist (x)
mcd worklist (x)
into val 0
nouth.les.MultiCruncherNumerator@5fd0d5ae is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
into val 0
nouth.les.MultiCruncherPowerise@2d98a335 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
MCP adding (12)
MCP adding (x)
MCP res ((12)*(x))
MCP adding (x)
MCP res (((x)^(2)))
MCP adding (10)
MCP adding (2)
MCP res ((10)*(2))
MCP adding (2)
MCP adding (x)
MCP res ((2)*((x)^(2)))
into val 4
nouth.les.MultiCruncherPowerise@2d98a335 has brought me a new dirty child : (((1)+((12)*(x))+(((x)^(2))))=(((10)*(2))+((2)*((x)^(2)))))
State polishing child : (((1)+((12)*(x))+(((x)^(2))))=(((10)*(2))+((2)*((x)^(2)))))
nouth.les.MultiCruncherPlain@16b98e56 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
into val 1
nouth.les.MultiCruncherPlain@16b98e56 has brought me a new dirty child : (((1)+((12)*(x))+((x)*(x)))=(((20))+((2)*(x)*(x))))
State polishing child : (((1)+((12)*(x))+((x)*(x)))=(((20))+((2)*(x)*(x))))
nouth.les.MultiCruncherExpand@7ef20235 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@27d6c5e0 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
mcd worklist (12)
mcd worklist (x)
mcd worklist (x)
mcd worklist (x)
mcd worklist (10)
mcd worklist (2)
mcd worklist (2)
mcd worklist (x)
mcd worklist (x)
into val 0
nouth.les.MultiCruncherNumerator@4f3f5b24 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
into val 0
nouth.les.MultiCruncherPowerise@15aeb7ab is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
MCP adding (12)
MCP adding (x)
MCP res ((12)*(x))
MCP adding (x)
MCP res (((x)^(2)))
MCP adding (10)
MCP adding (2)
MCP res ((10)*(2))
MCP adding (2)
MCP adding (x)
MCP res ((2)*((x)^(2)))
into val 4
nouth.les.MultiCruncherPowerise@15aeb7ab has brought me a new dirty child : (((1)+((12)*(x))+(((x)^(2))))=(((10)*(2))+((2)*((x)^(2)))))
State polishing child : (((1)+((12)*(x))+(((x)^(2))))=(((10)*(2))+((2)*((x)^(2)))))
nouth.les.AddCruncherEqual@7b23ec81 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
ACE rwif ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif ((x)*(x))
ACE rwif ()
comparing() to ((x)*(x))
ACE rwif ((x))
comparing((x)) to ((x)*(x))
ACE rwif ()
ACE rwif ((x)*(x))
ACE rwif ()
comparing() to ((x)*(x))
into val 0
nouth.les.AddCruncherSingleDenominator@6acbcfc0 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
ACSD 0 not addex (1)
ACSD 0 not addex (12)
ACSD 0 not addex (x)
ACSD 0 not addex ((12)*(x))
ACSD 0 not addex (x)
ACSD 0 not addex (x)
ACSD 0 not addex ((x)*(x))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)*(x)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)*(x))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)*(x))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)*(x)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)*(x))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)*(x))))
ACSD 0 deno is 1 of ((1)+((12)*(x))+((x)*(x)))
ACSD 0 not addex (10)
ACSD 0 not addex (2)
ACSD 0 not addex ((10)*(2))
ACSD 0 not addex (2)
ACSD 0 not addex (x)
ACSD 0 not addex (x)
ACSD 0 not addex ((2)*(x)*(x))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*(x)*(x)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*(x)*(x))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*(x)*(x))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*(x)*(x)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*(x)*(x))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*(x)*(x))))
ACSD 0 deno is 1 of (((10)*(2))+((2)*(x)*(x)))
ACSD 0 not addex (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
into val 0
nouth.les.MultiCruncherPlain@5f184fc6 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
into val 1
nouth.les.MultiCruncherPlain@5f184fc6 has brought me a new dirty child : (((1)+((12)*(x))+((x)*(x)))=(((20))+((2)*(x)*(x))))
State polishing child : (((1)+((12)*(x))+((x)*(x)))=(((20))+((2)*(x)*(x))))
nouth.les.MultiCruncherExpand@3feba861 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5b480cf9 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
mcd worklist (12)
mcd worklist (x)
mcd worklist (x)
mcd worklist (x)
mcd worklist (10)
mcd worklist (2)
mcd worklist (2)
mcd worklist (x)
mcd worklist (x)
into val 0
nouth.les.MultiCruncherNumerator@6f496d9f is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
into val 0
nouth.les.MultiCruncherPowerise@723279cf is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
MCP adding (12)
MCP adding (x)
MCP res ((12)*(x))
MCP adding (x)
MCP res (((x)^(2)))
MCP adding (10)
MCP adding (2)
MCP res ((10)*(2))
MCP adding (2)
MCP adding (x)
MCP res ((2)*((x)^(2)))
into val 4
nouth.les.MultiCruncherPowerise@723279cf has brought me a new dirty child : (((1)+((12)*(x))+(((x)^(2))))=(((10)*(2))+((2)*((x)^(2)))))
State polishing child : (((1)+((12)*(x))+(((x)^(2))))=(((10)*(2))+((2)*((x)^(2)))))
nouth.les.MultiCruncherPlain@10f87f48 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
into val 1
nouth.les.MultiCruncherPlain@10f87f48 has brought me a new dirty child : (((1)+((12)*(x))+((x)*(x)))=(((20))+((2)*(x)*(x))))
State polishing child : (((1)+((12)*(x))+((x)*(x)))=(((20))+((2)*(x)*(x))))
nouth.les.MultiCruncherExpand@b4c966a is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@2f4d3709 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
mcd worklist (12)
mcd worklist (x)
mcd worklist (x)
mcd worklist (x)
mcd worklist (10)
mcd worklist (2)
mcd worklist (2)
mcd worklist (x)
mcd worklist (x)
into val 0
nouth.les.MultiCruncherNumerator@4e50df2e is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
into val 0
nouth.les.MultiCruncherPowerise@1d81eb93 is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
MCP adding (12)
MCP adding (x)
MCP res ((12)*(x))
MCP adding (x)
MCP res (((x)^(2)))
MCP adding (10)
MCP adding (2)
MCP res ((10)*(2))
MCP adding (2)
MCP adding (x)
MCP res ((2)*((x)^(2)))
into val 4
nouth.les.MultiCruncherPowerise@1d81eb93 has brought me a new dirty child : (((1)+((12)*(x))+(((x)^(2))))=(((10)*(2))+((2)*((x)^(2)))))
State polishing child : (((1)+((12)*(x))+(((x)^(2))))=(((10)*(2))+((2)*((x)^(2)))))
nouth.les.AddCruncherEqual@7291c18f is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
ACE rwif ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif ((x)*(x))
ACE rwif ()
comparing() to ((x)*(x))
ACE rwif ((x))
comparing((x)) to ((x)*(x))
ACE rwif ()
ACE rwif ((x)*(x))
ACE rwif ()
comparing() to ((x)*(x))
into val 0
nouth.les.AddCruncherSingleDenominator@34a245ab is messing around now.
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
ACSD 0 not addex (1)
ACSD 0 not addex (12)
ACSD 0 not addex (x)
ACSD 0 not addex ((12)*(x))
ACSD 0 not addex (x)
ACSD 0 not addex (x)
ACSD 0 not addex ((x)*(x))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)*(x)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)*(x))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)*(x))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)*(x)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)*(x))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((1)+((12)*(x))+((x)*(x))))
ACSD 0 deno is 1 of ((1)+((12)*(x))+((x)*(x)))
ACSD 0 not addex (10)
ACSD 0 not addex (2)
ACSD 0 not addex ((10)*(2))
ACSD 0 not addex (2)
ACSD 0 not addex (x)
ACSD 0 not addex (x)
ACSD 0 not addex ((2)*(x)*(x))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*(x)*(x)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*(x)*(x))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*(x)*(x))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*(x)*(x)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*(x)*(x))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((10)*(2))+((2)*(x)*(x))))
ACSD 0 deno is 1 of (((10)*(2))+((2)*(x)*(x)))
ACSD 0 not addex (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
into val 0
nouth.les.AlteratorAdd@3b9a45b3 is messing around now.
It's altEx is (((-1)*(12)*(x))+((-1)*(x)*(x)))
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
ACE rwif ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif ((x)*(x))
ACE rwif ()
comparing() to ((x)*(x))
ACE rwif ((x))
comparing((x)) to ((x)*(x))
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif ((x))
comparing((x)) to ((x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ((x)*(x))
ACE rwif ()
comparing() to ((x)*(x))
ACE rwif ((x))
comparing((x)) to ((x)*(x))
ACE rwif ((x)*(x))
comparing((x)*(x)) to ((x)*(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ((x))
ACE rwif ((x)*(x))
ACE rwif ((x))
comparing((x)) to ((x)*(x))
ACE rwif ()
ACE rwif ((x))
comparing((x)) to ()
ACE rwif ((x)*(x))
comparing((x)*(x)) to ()
ACE rwif ((x)*(x))
ACE rwif ((x))
comparing((x)) to ((x)*(x))
ACE rwif ((x)*(x))
comparing((x)*(x)) to ((x)*(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
into val 1
nouth.les.AlteratorAdd@3b9a45b3 has brought me a new dirty child : ((((0)*(x))+((0)*(x)*(x))+((1)))=(((-12)*(x))+((1)*(x)*(x))+((20))))
State polishing child : ((((0)*(x))+((0)*(x)*(x))+((1)))=(((-12)*(x))+((1)*(x)*(x))+((20))))
nouth.les.AlteratorAdd@7699a589 is messing around now.
It's altEx is (((-1)*(1)))
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif ((x)*(x))
ACE rwif ()
comparing() to ((x)*(x))
ACE rwif ((x))
comparing((x)) to ((x)*(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ((x)*(x))
ACE rwif ()
comparing() to ((x)*(x))
into val 1
nouth.les.AlteratorAdd@7699a589 has brought me a new dirty child : ((((0))+((1)*(x)*(x))+((12)*(x)))=(((19))+((2)*(x)*(x))))
State polishing child : ((((0))+((1)*(x)*(x))+((12)*(x)))=(((19))+((2)*(x)*(x))))
nouth.les.AlteratorAdd@58372a00 is messing around now.
It's altEx is (((-1)*(2)*(x)*(x)))
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
ACE rwif ()
ACE rwif ((x)*(x))
ACE rwif ()
comparing() to ((x)*(x))
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif ((x)*(x))
comparing((x)*(x)) to ((x))
ACE rwif ((x)*(x))
ACE rwif ()
comparing() to ((x)*(x))
ACE rwif ((x)*(x))
comparing((x)*(x)) to ((x)*(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ((x)*(x))
ACE rwif ()
ACE rwif ((x)*(x))
comparing((x)*(x)) to ()
ACE rwif ((x)*(x))
ACE rwif ((x)*(x))
comparing((x)*(x)) to ((x)*(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
into val 1
nouth.les.AlteratorAdd@58372a00 has brought me a new dirty child : ((((-1)*(x)*(x))+((1))+((12)*(x)))=(((0)*(x)*(x))+((20))))
State polishing child : ((((-1)*(x)*(x))+((1))+((12)*(x)))=(((0)*(x)*(x))+((20))))
nouth.les.AlteratorAdd@4dd8dc3 is messing around now.
It's altEx is (((-1)*(10)*(2)))
on child (((1)+((12)*(x))+((x)*(x)))=(((10)*(2))+((2)*(x)*(x))))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif ((x)*(x))
ACE rwif ()
comparing() to ((x)*(x))
ACE rwif ((x))
comparing((x)) to ((x)*(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ((x)*(x))
ACE rwif ()
comparing() to ((x)*(x))
into val 1
nouth.les.AlteratorAdd@4dd8dc3 has brought me a new dirty child : ((((-19))+((1)*(x)*(x))+((12)*(x)))=(((0))+((2)*(x)*(x))))
State polishing child : ((((-19))+((1)*(x)*(x))+((12)*(x)))=(((0))+((2)*(x)*(x))))
It just propagated.
#hf 20000
#hf 20015
#hf 22015
#hf 20000
#hf 20014
#hf 22014
#hf 20000
#hf 20011
#hf 22011
New unique children : <(((1)+((12)*(x))+((x)*(x)))=((20)+((2)*(x)*(x)))) ; ((((12)*(x))+((x)*(x)))=((19)+((2)*(x)*(x)))) ; (((1)+((-1)*(x)*(x))+((12)*(x)))=(20)) ; >
Children hfs : <22015 ; 22014 ; 22011 ; >
Children ops : <nouth.les.MultiCruncherPlain@6d03e736nouth.les.AlteratorAdd@7699a589nouth.les.AlteratorAdd@58372a00>
=====================================STATE 5 , generation 2
CurrState is ((-19)=(((-12)*(x))+((x)^(2))))
It's hf is 22009
It's parent's operator is : nouth.les.AlteratorAdd@279f2327
It's operator is : nouth.les.AlteratorAdd@2f2c9b19
I'm ((-19)=(((-12)*(x))+((x)^(2)))) and I'm about to propagate.
EqEx : (-19) is suggesting alterators now.
EqEx : (((-12)*(x))+((x)^(2))) is suggesting alterators now.
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((x)^(2))
nouth.les.AlteratorAdd@7cc355be
adding it.
nouth.les.MultiCruncherPlain@6e8cf4c6 is messing around now.
on child ((-19)=(((-12)*(x))+((x)^(2))))
into val 0
nouth.les.MultiCruncherExpand@12edcd21 is messing around now.
on child ((-19)=(((-12)*(x))+((x)^(2))))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@34c45dca is messing around now.
on child ((-19)=(((-12)*(x))+((x)^(2))))
mcd worklist (-12)
mcd worklist (x)
into val 0
nouth.les.MultiCruncherNumerator@52cc8049 is messing around now.
on child ((-19)=(((-12)*(x))+((x)^(2))))
into val 0
nouth.les.MultiCruncherPowerise@5b6f7412 is messing around now.
on child ((-19)=(((-12)*(x))+((x)^(2))))
MCP adding (-12)
MCP adding (x)
MCP res ((-12)*(x))
into val 1
nouth.les.MultiCruncherPowerise@5b6f7412 has brought me a new dirty child : ((-19)=(((-12)*(x))+((x)^(2))))
State polishing child : ((-19)=(((-12)*(x))+((x)^(2))))
nouth.les.PowerCruncherExpand@27973e9b is messing around now.
on child ((-19)=(((-12)*(x))+((x)^(2))))
into val 1
nouth.les.PowerCruncherExpand@27973e9b has brought me a new dirty child : ((-19)=(((-12)*(x))+((x)*(x))))
State polishing child : ((-19)=(((-12)*(x))+((x)*(x))))
nouth.les.AddCruncherEqual@312b1dae is messing around now.
on child ((-19)=(((-12)*(x))+((x)^(2))))
ACE rwif ((x))
ACE rwif (((x)^(2)))
ACE rwif ((x))
comparing((x)) to (((x)^(2)))
into val 0
nouth.les.AddCruncherSingleDenominator@7530d0a is messing around now.
on child ((-19)=(((-12)*(x))+((x)^(2))))
ACSD 0 not addex (-19)
ACSD 0 not addex (-12)
ACSD 0 not addex (x)
ACSD 0 not addex ((-12)*(x))
ACSD 0 not addex (x)
ACSD 0 not addex (2)
ACSD 0 not addex ((x)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((x)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-12)*(x))+((x)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-12)*(x))+((x)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-12)*(x))+((x)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-12)*(x))+((x)^(2))))
ACSD 0 deno is 1 of (((-12)*(x))+((x)^(2)))
ACSD 0 not addex ((-19)=(((-12)*(x))+((x)^(2))))
into val 0
nouth.les.AlteratorAdd@7cc355be is messing around now.
It's altEx is (((-1)*((x)^(2)))+((-1)*(-12)*(x)))
on child ((-19)=(((-12)*(x))+((x)^(2))))
ACE rwif ()
ACE rwif (((x)^(2)))
ACE rwif ()
comparing() to (((x)^(2)))
ACE rwif ((x))
ACE rwif ()
comparing() to ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif (((x)^(2)))
ACE rwif ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif ((x))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to ((x))
ACE rwif ((x))
comparing((x)) to ((x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((x)^(2)))
ACE rwif (((x)^(2)))
comparing(((x)^(2))) to (((x)^(2)))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
into val 1
nouth.les.AlteratorAdd@7cc355be has brought me a new dirty child : ((((-19))+((-1)*((x)^(2)))+((12)*(x)))=(((0)*((x)^(2)))+((0)*(x))))
State polishing child : ((((-19))+((-1)*((x)^(2)))+((12)*(x)))=(((0)*((x)^(2)))+((0)*(x))))
It just propagated.
#hf 20000
#hf 20009
#hf 23009
New unique children : <((-19)=(((-12)*(x))+((x)*(x)))) ; (((-19)+((-1)*((x)^(2)))+((12)*(x)))=(0)) ; >
Children hfs : <23009 ; 0 ; >
Children ops : <nouth.les.PowerCruncherExpand@27973e9bnouth.les.AlteratorAdd@7cc355be>
=====================================STATE 6 , generation 3
CurrState is (((-19)+((-1)*((x)^(2)))+((12)*(x)))=(0))
It's hf is 0
It's parent's operator is : nouth.les.AlteratorAdd@2f2c9b19
It's operator is : nouth.les.AlteratorAdd@7cc355be
Result found !
Solutionmaker rank = 2
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (0)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (0)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (0)
ComputeSearcher loop 1 start ,bestHf 5 bestChildHf -1 open size 1 closed size 0
State 0-1 propagating
I'm ((0)+((-1)*(1))) and I'm about to propagate.
nouth.les.MultiCruncherPlain@506e1b77 is messing around now.
on child ((0)+((-1)*(1)))
into val 1
nouth.les.MultiCruncherPlain@506e1b77 has brought me a new dirty child : ((0)+((-1)))
State polishing child : ((0)+((-1)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-1))
nouth.les.MultiCruncherExpand@4fca772d is messing around now.
on child ((0)+((-1)*(1)))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@9807454 is messing around now.
on child ((0)+((-1)*(1)))
mcd worklist (-1)
mcd worklist (1)
into val 0
nouth.les.MultiCruncherNumerator@3d494fbf is messing around now.
on child ((0)+((-1)*(1)))
into val 0
nouth.les.MultiCruncherPowerise@1ddc4ec2 is messing around now.
on child ((0)+((-1)*(1)))
MCP adding (-1)
MCP adding (1)
MCP res ((-1)*(1))
into val 1
nouth.les.MultiCruncherPowerise@1ddc4ec2 has brought me a new dirty child : ((0)+((-1)*(1)))
State polishing child : ((0)+((-1)*(1)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1)))
nouth.les.AddCruncherEqual@133314b is messing around now.
on child ((0)+((-1)*(1)))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
into val 1
nouth.les.AddCruncherEqual@133314b has brought me a new dirty child : (((-1)))
State polishing child : (((-1)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-1))
nouth.les.AddCruncherSingleDenominator@b1bc7ed is messing around now.
on child ((0)+((-1)*(1)))
ACSD 0 not addex (0)
ACSD 0 not addex (-1)
ACSD 0 not addex (1)
ACSD 0 not addex ((-1)*(1))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (0)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((0)+((-1)*(1)))
into val 0
ComputeSearcher loop 1 end bestHf 5 bestChildHf 2 open size 1 closed size 0
ComputeSearcher loop 2 start ,bestHf 2 bestChildHf -1 open size 2 closed size 0
State -1 propagating
I'm ((-1)) and I'm about to propagate.
nouth.les.AddCruncherEqual@7cd84586 is messing around now.
on child ((-1))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@30dae81 is messing around now.
on child ((-1))
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
into val 0
State -1 propagating
I'm ((-1)) and I'm about to propagate.
nouth.les.AddCruncherEqual@1b2c6ec2 is messing around now.
on child ((-1))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@4edde6e5 is messing around now.
on child ((-1))
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
into val 0
ComputeSearcher loop 2 end bestHf 2 bestChildHf -1 open size 2 closed size 0
No more children
ComputeSearcher loop 1 start ,bestHf 5 bestChildHf -1 open size 1 closed size 0
State 0+1\\\cdot 12 propagating
I'm ((0)+((1)*(12))) and I'm about to propagate.
nouth.les.MultiCruncherPlain@70177ecd is messing around now.
on child ((0)+((1)*(12)))
into val 1
nouth.les.MultiCruncherPlain@70177ecd has brought me a new dirty child : ((0)+((12)))
State polishing child : ((0)+((12)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
nouth.les.MultiCruncherExpand@1e80bfe8 is messing around now.
on child ((0)+((1)*(12)))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@66a29884 is messing around now.
on child ((0)+((1)*(12)))
mcd worklist (1)
mcd worklist (12)
into val 0
nouth.les.MultiCruncherNumerator@4769b07b is messing around now.
on child ((0)+((1)*(12)))
into val 0
nouth.les.MultiCruncherPowerise@cc34f4d is messing around now.
on child ((0)+((1)*(12)))
MCP adding (1)
MCP adding (12)
MCP res ((1)*(12))
into val 1
nouth.les.MultiCruncherPowerise@cc34f4d has brought me a new dirty child : ((0)+((1)*(12)))
State polishing child : ((0)+((1)*(12)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
nouth.les.AddCruncherEqual@17a7cec2 is messing around now.
on child ((0)+((1)*(12)))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
into val 1
nouth.les.AddCruncherEqual@17a7cec2 has brought me a new dirty child : (((12)))
State polishing child : (((12)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
nouth.les.AddCruncherSingleDenominator@65b3120a is messing around now.
on child ((0)+((1)*(12)))
ACSD 0 not addex (0)
ACSD 0 not addex (1)
ACSD 0 not addex (12)
ACSD 0 not addex ((1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (0)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((0)+((1)*(12)))
into val 0
ComputeSearcher loop 1 end bestHf 5 bestChildHf 2 open size 1 closed size 0
ComputeSearcher loop 2 start ,bestHf 2 bestChildHf -1 open size 3 closed size 0
State 12 propagating
I'm ((12)) and I'm about to propagate.
nouth.les.AddCruncherEqual@6f539caf is messing around now.
on child ((12))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@79fc0f2f is messing around now.
on child ((12))
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
into val 0
State 12 propagating
I'm ((12)) and I'm about to propagate.
nouth.les.AddCruncherEqual@50040f0c is messing around now.
on child ((12))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@2dda6444 is messing around now.
on child ((12))
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
into val 0
State 12 propagating
I'm ((12)) and I'm about to propagate.
nouth.les.AddCruncherEqual@5e9f23b4 is messing around now.
on child ((12))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@4783da3f is messing around now.
on child ((12))
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
into val 0
ComputeSearcher loop 2 end bestHf 2 bestChildHf -1 open size 3 closed size 0
No more children
ComputeSearcher loop 1 start ,bestHf 3 bestChildHf -1 open size 1 closed size 0
State -19+0 propagating
I'm ((-19)+(0)) and I'm about to propagate.
nouth.les.AddCruncherEqual@378fd1ac is messing around now.
on child ((-19)+(0))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
into val 1
nouth.les.AddCruncherEqual@378fd1ac has brought me a new dirty child : (((-19)))
State polishing child : (((-19)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
nouth.les.AddCruncherSingleDenominator@49097b5d is messing around now.
on child ((-19)+(0))
ACSD 0 not addex (-19)
ACSD 0 not addex (0)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (0)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19)+(0))
into val 0
ComputeSearcher loop 1 end bestHf 3 bestChildHf 2 open size 1 closed size 0
ComputeSearcher loop 2 start ,bestHf 2 bestChildHf -1 open size 1 closed size 0
State -19 propagating
I'm ((-19)) and I'm about to propagate.
nouth.les.AddCruncherEqual@6e2c634b is messing around now.
on child ((-19))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@37a71e93 is messing around now.
on child ((-19))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
into val 0
ComputeSearcher loop 2 end bestHf 2 bestChildHf -1 open size 1 closed size 0
No more children
sq abc : ((0)+((-1)*(1)))_((0)+((1)*(12)))_((-19)+(0))
sq abc : ((-1))_((12))_((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((12))^(2))+((-4)*((-1))*((-19))))
sq before looú
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-1)*((12)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (2)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((12))^(2))+((-4)*((-1))*((-19))))
SolveQuadratic adding \\\frac{\sqrt{12^2-4\\\cdot (-1)\\\cdot (-19)}-12)}{2\\\cdot (-1)}
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-1)*((12)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (2)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((12))^(2))+((-4)*((-1))*((-19))))
SolveQuadratic adding \\\frac{-\sqrt{12^2-4\\\cdot (-1)\\\cdot (-19)}-12)}{2\\\cdot (-1)}
ComputeSearcher loop 1 start ,bestHf 27 bestChildHf -1 open size 1 closed size 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((12))^(2))+((-4)*((-1))*((-19))))
State \\\frac{\sqrt{12^2-4\\\cdot (-1)\\\cdot (-19)}-12)}{2\\\cdot (-1)}=x propagating
I'm ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x)) and I'm about to propagate.
EqEx : (((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1)))) is suggesting alterators now.
nouth.les.AlteratorMulti@6576fe71
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@76fb509a is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@300ffa5d is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of ((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex (((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.PowerCruncherExpand@1f17ae12 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 1
nouth.les.PowerCruncherExpand@1f17ae12 has brought me a new dirty child : ((((((((12))*((12)))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
State polishing child : ((((((((12))*((12)))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
nouth.les.AddCruncherEqual@4d405ef7 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@6193b845 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of ((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex (((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.AddCruncherEqual@2e817b38 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@433c675d is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of ((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex (((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPlain@3f91beef is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherExpand@1a6c5a9e is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
{{{w*r = ((-1)*(-19))
{{{t = ((-1)*(-19))
Templist : ((-1)*(-19))
{{{current result = (((-1)*(-19)))
{{{((-1)*(-19)*(-4)) (multied by) (-4)
(((-1)*(-19)*(-4))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((12))
{{{((-1)*(12)) (multied by) (-1)
(((-1)*(12))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
{{{((-1)*(2)) (multied by) (2)
(((-1)*(2))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 3
nouth.les.MultiCruncherExpand@1a6c5a9e has brought me a new dirty child : ((((((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : ((((((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherDivs@37bba400 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
mcd worklist (-4)
mcd worklist ((-1))
mcd worklist ((-19))
mcd worklist (-1)
mcd worklist ((12))
mcd worklist (2)
mcd worklist ((-1))
into val 0
nouth.les.MultiCruncherNumerator@179d3b25 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPowerise@254989ff is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
MCP adding (-4)
MCP adding ((-1))
MCP adding ((-19))
MCP res ((-4)*((-1))*((-19)))
MCP adding (-1)
MCP adding ((12))
MCP res ((-1)*((12)))
MCP adding (2)
MCP adding ((-1))
MCP res ((2)*((-1)))
into val 3
nouth.les.MultiCruncherPowerise@254989ff has brought me a new dirty child : ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
State polishing child : ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
nouth.les.AddCruncherEqual@5d099f62 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@37f8bb67 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of ((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex (((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@49c2faae is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1))))+((-1)*((12))))/((2)*((-1))))
DCSN dealt : (((((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1))))+((-1)*((12))))/((2)*((-1))))
DCSN listadd(((((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1))))+((-1)*((12))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@49c2faae has brought me a new dirty child : (((((((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1))))+((-1)*((12))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1))))+((-1)*((12))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@20ad9418 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.PowerCruncherExpand@31cefde0 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 1
nouth.les.PowerCruncherExpand@31cefde0 has brought me a new dirty child : ((((((((12))*((12)))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
State polishing child : ((((((((12))*((12)))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
nouth.les.AddCruncherEqual@439f5b3d is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@1d56ce6a is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of ((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex (((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPlain@5197848c is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherExpand@17f052a3 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
{{{w*r = ((-1)*(-19))
{{{t = ((-1)*(-19))
Templist : ((-1)*(-19))
{{{current result = (((-1)*(-19)))
{{{((-1)*(-19)*(-4)) (multied by) (-4)
(((-1)*(-19)*(-4))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((12))
{{{((-1)*(12)) (multied by) (-1)
(((-1)*(12))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
{{{((-1)*(2)) (multied by) (2)
(((-1)*(2))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 3
nouth.les.MultiCruncherExpand@17f052a3 has brought me a new dirty child : ((((((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : ((((((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherDivs@2e0fa5d3 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
mcd worklist (-4)
mcd worklist ((-1))
mcd worklist ((-19))
mcd worklist (-1)
mcd worklist ((12))
mcd worklist (2)
mcd worklist ((-1))
into val 0
nouth.les.MultiCruncherNumerator@5010be6 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPowerise@685f4c2e is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
MCP adding (-4)
MCP adding ((-1))
MCP adding ((-19))
MCP res ((-4)*((-1))*((-19)))
MCP adding (-1)
MCP adding ((12))
MCP res ((-1)*((12)))
MCP adding (2)
MCP adding ((-1))
MCP res ((2)*((-1)))
into val 3
nouth.les.MultiCruncherPowerise@685f4c2e has brought me a new dirty child : ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
State polishing child : ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
nouth.les.AddCruncherEqual@7daf6ecc is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@2e5d6d97 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of ((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex (((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.AddCruncherEqual@238e0d81 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@31221be2 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of ((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex (((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPlain@377dca04 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherExpand@728938a9 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
{{{w*r = ((-1)*(-19))
{{{t = ((-1)*(-19))
Templist : ((-1)*(-19))
{{{current result = (((-1)*(-19)))
{{{((-1)*(-19)*(-4)) (multied by) (-4)
(((-1)*(-19)*(-4))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((12))
{{{((-1)*(12)) (multied by) (-1)
(((-1)*(12))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
{{{((-1)*(2)) (multied by) (2)
(((-1)*(2))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 3
nouth.les.MultiCruncherExpand@728938a9 has brought me a new dirty child : ((((((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : ((((((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherDivs@21b8d17c is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
mcd worklist (-4)
mcd worklist ((-1))
mcd worklist ((-19))
mcd worklist (-1)
mcd worklist ((12))
mcd worklist (2)
mcd worklist ((-1))
into val 0
nouth.les.MultiCruncherNumerator@6433a2 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5910e440 is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
MCP adding (-4)
MCP adding ((-1))
MCP adding ((-19))
MCP res ((-4)*((-1))*((-19)))
MCP adding (-1)
MCP adding ((12))
MCP res ((-1)*((12)))
MCP adding (2)
MCP adding ((-1))
MCP res ((2)*((-1)))
into val 3
nouth.les.MultiCruncherPowerise@5910e440 has brought me a new dirty child : ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
State polishing child : ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
nouth.les.DivCruncherSimplifyNew@6267c3bb is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1))))+((-1)*((12))))/((2)*((-1))))
DCSN dealt : (((((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1))))+((-1)*((12))))/((2)*((-1))))
DCSN listadd(((((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1))))+((-1)*((12))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@6267c3bb has brought me a new dirty child : (((((((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1))))+((-1)*((12))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1))))+((-1)*((12))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@533ddba is messing around now.
on child ((((((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
ComputeSearcher loop 1 end bestHf 27 bestChildHf 22 open size 1 closed size 0
ComputeSearcher loop 2 start ,bestHf 22 bestChildHf -1 open size 10 closed size 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)*(12)))
State \\\frac{\sqrt{--19)\\\cdot (-4)+12\\\cdot 12}-12}{-1)\\\cdot 2}=x propagating
I'm (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@246b179d
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@7a07c5b4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@7a07c5b4 has brought me a new dirty child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@26a1ab54 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@3d646c37 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@41cf53f9 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5a10411 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@5a10411 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@2ef1e4fa is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@2ef1e4fa has brought me a new dirty child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@306a30c7 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@b81eda8 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@68de145 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@27fa135a is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@27fa135a has brought me a new dirty child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@46f7f36a is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
comparing(((((68)))^((1)/(2)))) to ()
into val 1
nouth.les.AddCruncherEqual@46f7f36a has brought me a new dirty child : (((((1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
State polishing child : (((((1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherSingleDenominator@421faab1 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (12)
ACSD 0 not addex ((12)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)*(12)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@2b71fc7e is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@2b71fc7e has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@5ce65a89 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@25f38edc is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@1a86f2f1 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@1a86f2f1 has brought me a new dirty child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@3eb07fd3 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@506c589e is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@69d0a921 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@446cdf90 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@446cdf90 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@799f7e29 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
comparing(((((68)))^((1)/(2)))) to ()
into val 1
nouth.les.AddCruncherEqual@799f7e29 has brought me a new dirty child : (((((1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
State polishing child : (((((1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherSingleDenominator@4b85612c is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (12)
ACSD 0 not addex ((12)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)*(12)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@277050dc is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@277050dc has brought me a new dirty child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@5c29bfd is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@7aec35a is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@67424e82 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@42110406 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@42110406 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@531d72ca is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@531d72ca has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@22d8cfe0 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@579bb367
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@1de0aca6 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@1de0aca6 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@255316f2 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@41906a77 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@4b9af9a9 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5387f9e0 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@5387f9e0 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@6e5e91e4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@6e5e91e4 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@2cdf8d8a is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@30946e09 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@5cb0d902 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@5cb0d902 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@46fbb2c1 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@1698c449 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@1698c449 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@5ef04b5 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@5ef04b5 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@5f4da5c3 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@443b7951 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@14514713 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@69663380 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@69663380 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@5b37e0d2 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@4459eb14 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@5a2e4553 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@5a2e4553 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@28c97a5 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@6659c656 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@6d5380c2 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@45ff54e6 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@45ff54e6 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@2328c243 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@2328c243 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@bebdb06 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@7a4f0f29
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@45283ce2 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@45283ce2 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@2077d4de is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@7591083d is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@77a567e1 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@736e9adb is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@736e9adb has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@6d21714c is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@6d21714c has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@108c4c35 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@4ccabbaa is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@4bf558aa is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@4bf558aa has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@2d38eb89 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@5fa7e7ff is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@5fa7e7ff has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@4629104a is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@4629104a has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@27f8302d is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@4d76f3f8 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@2d8e6db6 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@23ab930d is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@23ab930d has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@4534b60d is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@3fa77460 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@619a5dff is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@619a5dff has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@1ed6993a is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@7e32c033 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@7ab2bfe1 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@497470ed is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@497470ed has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@63c12fb0 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@63c12fb0 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@b1a58a3 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@6438a396
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@e2144e4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@e2144e4 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@6477463f is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@3d71d552 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@1cf4f579 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@18769467 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@18769467 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@46ee7fe8 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@46ee7fe8 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@7506e922 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@4ee285c6 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@621be5d1 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@621be5d1 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@573fd745 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@15327b79 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@15327b79 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@4f2410ac is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@4f2410ac has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@722c41f4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5b80350b is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@5d6f64b1 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@32a1bec0 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@32a1bec0 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@22927a81 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@78e03bb5 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@5e8c92f4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@5e8c92f4 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@61e4705b is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@50134894 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@2957fcb0 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@1376c05c is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@1376c05c has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@51521cc1 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@51521cc1 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@1b4fb997 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)*(12)))
State \\\frac{\sqrt{--19)\\\cdot (-4)+12\\\cdot 12}-12}{-1)\\\cdot 2}=x propagating
I'm (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@deb6432
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@28ba21f3 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@28ba21f3 has brought me a new dirty child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@694f9431 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@f2a0b8e is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@593634ad is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@20fa23c1 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@20fa23c1 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@3581c5f3 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@3581c5f3 has brought me a new dirty child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@6aa8ceb6 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@2530c12 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@73c6c3b2 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@48533e64 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@48533e64 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@64a294a6 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
comparing(((((68)))^((1)/(2)))) to ()
into val 1
nouth.les.AddCruncherEqual@64a294a6 has brought me a new dirty child : (((((1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
State polishing child : (((((1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherSingleDenominator@7e0b37bc is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (12)
ACSD 0 not addex ((12)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)*(12)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@3b95a09c is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@3b95a09c has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@6ae40994 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@1a93a7ca is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@3d82c5f3 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@3d82c5f3 has brought me a new dirty child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@2b05039f is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@61e717c2 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@66cd51c3 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4dcbadb4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@4dcbadb4 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@4e515669 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
comparing(((((68)))^((1)/(2)))) to ()
into val 1
nouth.les.AddCruncherEqual@4e515669 has brought me a new dirty child : (((((1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
State polishing child : (((((1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherSingleDenominator@17d10166 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (12)
ACSD 0 not addex ((12)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)*(12)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@1b9e1916 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@1b9e1916 has brought me a new dirty child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((144)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@ba8a1dc is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@4f8e5cde is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@504bae78 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@3b764bce is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@3b764bce has brought me a new dirty child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+(((12)^(2))))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@759ebb3d is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@759ebb3d has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@484b61fc is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@45fe3ee3
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@4cdf35a9 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@4cdf35a9 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@4c98385c is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5fcfe4b2 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@6bf2d08e is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5eb5c224 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@5eb5c224 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@53e25b76 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@53e25b76 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@73a8dfcc is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@ea30797 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@7e774085 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@7e774085 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@3f8f9dd6 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@aec6354 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@aec6354 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@1c655221 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@1c655221 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@58d25a40 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@1b701da1 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@726f3b58 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@442d9b6e is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@442d9b6e has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@ee7d9f1 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@15615099 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@1edf1c96 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@1edf1c96 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@368102c8 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@6996db8 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@1963006a is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@7fbe847c is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@7fbe847c has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@41975e01 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@41975e01 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@c2e1f26 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@dcf3e99
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@6d9c638 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@6d9c638 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@7dc5e7b4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@1ee0005 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@75a1cd57 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@3d012ddd is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@3d012ddd has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@6f2b958e is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@6f2b958e has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@1eb44e46 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@6504e3b2 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@515f550a is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@515f550a has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@626b2d4a is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@5e91993f is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@5e91993f has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@1c4af82c is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@1c4af82c has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@379619aa is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@cac736f is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@5e265ba4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@156643d4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@156643d4 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@123a439b is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@7de26db8 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@1175e2db is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@1175e2db has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@36aa7bc2 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@76ccd017 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@182decdb is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@26f0a63f is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@26f0a63f has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@4361bd48 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@4361bd48 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@53bd815b is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@2401f4c3
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@7637f22 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@7637f22 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@4926097b is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@762efe5d is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@5d22bbb7 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@41a4555e is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@41a4555e has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@3830f1c0 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@3830f1c0 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@39ed3c8d is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@71dac704 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@123772c4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@123772c4 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@2d363fb3 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@7d6f77cc is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@7d6f77cc has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@5aaa6d82 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@5aaa6d82 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@73a28541 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@6f75e721 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@69222c14 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@606d8acf is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@606d8acf has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@782830e is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@470e2030 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@3fb4f649 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@3fb4f649 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@33833882 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@200a570f is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@16b3fc9e is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@e2d56bf is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@e2d56bf has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@244038d0 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@244038d0 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@5680a178 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@5fdef03a
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@3b22cdd0 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@3b22cdd0 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@1e81f4dc is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@4d591d15 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@65ae6ba4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@48cf768c is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@48cf768c has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@59f95c5d is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@59f95c5d has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@5ccd43c2 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@4aa8f0b4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@7960847b is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@7960847b has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@6a6824be is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@5c8da962 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@5c8da962 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@512ddf17 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@512ddf17 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@2c13da15 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@77556fd is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@368239c8 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@9e89d68 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@9e89d68 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@3b192d32 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@16f65612 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@311d617d is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@311d617d has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@7c53a9eb is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@ed17bee is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@2a33fae0 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@707f7052 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@707f7052 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@11028347 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@11028347 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@14899482 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@21588809
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@2aae9190 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@2aae9190 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@2f333739 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@77468bd9 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@12bb4df8 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4cc77c2e is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@4cc77c2e has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@7a7b0070 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@7a7b0070 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@39a054a5 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@71bc1ae4 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@6ed3ef1 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@6ed3ef1 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@2437c6dc is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@1f89ab83 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@1f89ab83 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@e73f9ac is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@e73f9ac has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@61064425 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@7b1d7fff is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@299a06ac is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@383534aa is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@383534aa has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@6bc168e5 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@7b3300e5 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12))))
ACSD 0 deno is 1 of (((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@2e5c649 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@2e5c649 has brought me a new dirty child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
State polishing child : (((((((-76))+((12)^(2)))^((1)/(2)))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@136432db is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@7382f612 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@1055e4af is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@3caeaf62 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 3
nouth.les.MultiCruncherPowerise@3caeaf62 has brought me a new dirty child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@e6ea0c6 is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@e6ea0c6 has brought me a new dirty child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@6a38e57f is messing around now.
on child (((((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
ComputeSearcher loop 2 end bestHf 22 bestChildHf 13 open size 10 closed size 0
ComputeSearcher loop 3 start ,bestHf 13 bestChildHf -1 open size 12 closed size 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12+\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+(((-76)+(144))^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@5577140b
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@1c6b6478 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@1c6b6478 has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@67f89fa3 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@4ac68d3e is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@4ac68d3e has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@277c0f21 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@6073f712 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@43556938 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@43556938 has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@3d04a311 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@7a46a697 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@7a46a697 has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@5f205aa is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12+\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+(((-76)+(144))^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@6d86b085
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@75828a0f is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@75828a0f has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@3abfe836 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@2ff5659e is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2ff5659e has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@77afea7d is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@161cd475 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@532760d8 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@532760d8 has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@57fa26b7 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@5f8ed237 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5f8ed237 has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@2f410acf is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-1)\\\cdot 2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@47089e5f
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@4141d797 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@4141d797 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@68f7aae2 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@4f47d241 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.AddCruncherEqual@4c3e4790 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@38cccef is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@5679c6c6 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 1
nouth.les.MultiCruncherPlain@5679c6c6 has brought me a new dirty child : ((((-12)+((68)^((1)/(2))))/((-2)))=(x))
State polishing child : ((((-12)+((68)^((1)/(2))))/((-2)))=(x))
nouth.les.MultiCruncherExpand@27ddd392 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@19e1023e is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@7cef4e59 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@64b8f8f4 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 1
nouth.les.MultiCruncherPowerise@64b8f8f4 has brought me a new dirty child : ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
State polishing child : ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@2db0f6b2 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@2db0f6b2 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@3cd1f1c8 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12+\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+(((-76)+(144))^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@3a4afd8d
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@1996cd68 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@1996cd68 has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@3339ad8e is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@555590 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@555590 has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@6d1e7682 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@424c0bc4 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@3c679bde is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@3c679bde has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@16b4a017 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@8807e25 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@8807e25 has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@2a3046da is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-1)\\\cdot 2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@2a098129
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@198e2867 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@198e2867 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@12f40c25 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@3ada9e37 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.AddCruncherEqual@5cbc508c is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@3419866c is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@63e31ee is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 1
nouth.les.MultiCruncherPlain@63e31ee has brought me a new dirty child : ((((-12)+((68)^((1)/(2))))/((-2)))=(x))
State polishing child : ((((-12)+((68)^((1)/(2))))/((-2)))=(x))
nouth.les.MultiCruncherExpand@68fb2c38 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@567d299b is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@2eafffde is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@59690aa4 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 1
nouth.les.MultiCruncherPowerise@59690aa4 has brought me a new dirty child : ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
State polishing child : ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@6842775d is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@6842775d has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@574caa3f is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12+\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+(((-76)+(144))^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@64cee07
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@1761e840 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@1761e840 has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@6c629d6e is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@5ecddf8f is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5ecddf8f has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@3f102e87 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@27abe2cd is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@5f5a92bb is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@5f5a92bb has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@6fdb1f78 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@51016012 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@51016012 has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@29444d75 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12+\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+(((-76)+(144))^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@2280cdac
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@1517365b is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@1517365b has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@4fccd51b is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@44e81672 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@44e81672 has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@60215eee is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@4ca8195f is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@65e579dc is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@65e579dc has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@61baa894 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@b065c63 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@b065c63 has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@768debd is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12+\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+(((-76)+(144))^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@490d6c15
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@7d4793a8 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@7d4793a8 has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@449b2d27 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@5479e3f is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5479e3f has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@27082746 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@66133adc is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@7bfcd12c is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@7bfcd12c has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@42f30e0a is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@24273305 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@24273305 has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@5b1d2887 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-1)\\\cdot 2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@46f5f779
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@1c2c22f3 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@1c2c22f3 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@18e8568 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@33e5ccce is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.AddCruncherEqual@5a42bbf4 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@270421f5 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@52d455b8 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 1
nouth.les.MultiCruncherPlain@52d455b8 has brought me a new dirty child : ((((-12)+((68)^((1)/(2))))/((-2)))=(x))
State polishing child : ((((-12)+((68)^((1)/(2))))/((-2)))=(x))
nouth.les.MultiCruncherExpand@4f4a7090 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@18ef96 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@6956de9 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@769c9116 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 1
nouth.les.MultiCruncherPowerise@769c9116 has brought me a new dirty child : ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
State polishing child : ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@6aceb1a5 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@6aceb1a5 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@2d6d8735 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12+\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+(((-76)+(144))^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@ba4d54
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@12bc6874 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@12bc6874 has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@de0a01f is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@4c75cab9 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@4c75cab9 has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@1ef7fe8e is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@6f79caec is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@67117f44 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@67117f44 has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@5d3411d is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@2471cca7 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2471cca7 has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@5fe5c6f is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-1)\\\cdot 2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@6979e8cb
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@763d9750 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@763d9750 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@5c0369c4 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@2be94b0f is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.AddCruncherEqual@d70c109 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@17ed40e0 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@50675690 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 1
nouth.les.MultiCruncherPlain@50675690 has brought me a new dirty child : ((((-12)+((68)^((1)/(2))))/((-2)))=(x))
State polishing child : ((((-12)+((68)^((1)/(2))))/((-2)))=(x))
nouth.les.MultiCruncherExpand@31b7dea0 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@3ac42916 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@47d384ee is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@2d6a9952 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 1
nouth.les.MultiCruncherPowerise@2d6a9952 has brought me a new dirty child : ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
State polishing child : ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@22a71081 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/((-1)*(2)))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@22a71081 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@3930015a is messing around now.
on child ((((-12)+((68)^((1)/(2))))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12+\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+(((-76)+(144))^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@629f0666
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@1bc6a36e is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@1bc6a36e has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@1ff8b8f is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@387c703b is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@387c703b has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@224aed64 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@c39f790 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@71e7a66b is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@71e7a66b has brought me a new dirty child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@2ac1fdc4 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+(((-76)+(144))^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+(((-76)+(144))^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+(((-76)+(144))^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@5f150435 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5f150435 has brought me a new dirty child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+(((-76)+(144))^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@1c53fd30 is messing around now.
on child ((((-12)+(((-76)+(144))^((1)/(2))))/(-2))=(x))
into val 0
ComputeSearcher loop 3 end bestHf 13 bestChildHf 11 open size 12 closed size 0
ComputeSearcher loop 4 start ,bestHf 11 bestChildHf -1 open size 20 closed size 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@50cbc42f
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@75412c2f is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@75412c2f has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@282ba1e is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@13b6d03 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@f5f2bb7 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@73035e27 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@64c64813 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@64c64813 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@3ecf72fd is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@483bf400
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@21a06946 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@21a06946 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@77f03bb1 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@326de728 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@25618e91 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@7a92922 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@71f2a7d5 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@71f2a7d5 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@2cfb4a64 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@5474c6c
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@4b6995df is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@4b6995df has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@2fc14f68 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@591f989e is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@66048bfd is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@61443d8f is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@445b84c0 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@445b84c0 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@61a52fbd is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@233c0b17
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@63d4e2ba is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@63d4e2ba has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@7bb11784 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@33a10788 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@7006c658 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@34033bd0 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@47fd17e3 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@47fd17e3 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@7cdbc5d3 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@3aa9e816
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@17d99928 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@17d99928 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@3834d63f is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@1ae369b7 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@6fffcba5 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@34340fab is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@2aafb23c is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2aafb23c has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@2b80d80f is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@3ab39c39
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@2eee9593 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2eee9593 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@7907ec20 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@546a03af is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@721e0f4f is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@28864e92 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@6ea6d14e is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@6ea6d14e has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@6ad5c04e is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@6833ce2c
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@725bef66 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@725bef66 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@2aaf7cc2 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@6e3c1e69 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@1888ff2c is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@35851384 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@649d209a is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@649d209a has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@6adca536 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@357246de
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@28f67ac7 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@28f67ac7 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@256216b3 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@2a18f23c is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@d7b1517 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@16c0663d is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@23223dd8 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@23223dd8 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@4ec6a292 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@1b40d5f0
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@ea4a92b is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@ea4a92b has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@3c5a99da is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@47f37ef1 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@5a01ccaa is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@71c7db30 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@19bb089b is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@19bb089b has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@4563e9ab is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@11531931
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@5e025e70 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5e025e70 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@1fbc7afb is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@45c8e616 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@4cdbe50f is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@66d33a is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@7cf10a6f is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@7cf10a6f has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@7e0babb1 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@6debcae2
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@5ba23b66 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5ba23b66 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@2ff4f00f is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@c818063 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@3f0ee7cb is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@75bd9247 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@7d417077 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@7d417077 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@7dc36524 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@35bbe5e8
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@2c8d66b2 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2c8d66b2 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@5a39699c is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@3cb5cdba is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@56cbfb61 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@1134affc is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@d041cf is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@d041cf has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@129a8472 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@1b0375b3
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@2f7c7260 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2f7c7260 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@2d209079 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@6bdf28bb is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@6b71769e is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@2752f6e2 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@e580929 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@e580929 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@1cd072a9 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@7c75222b
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@4c203ea1 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@4c203ea1 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@27f674d is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@1d251891 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@48140564 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@58ceff1 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@7c30a502 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@7c30a502 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@49e4cb85 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@2133c8f8
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@43a25848 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@43a25848 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@3ac3fd8b is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@5594a1b5 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@6a5fc7f7 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@3b6eb2ec is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@1e643faf is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@1e643faf has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@6e8dacdf is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@7a79be86
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@34ce8af7 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@34ce8af7 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@b684286 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@880ec60 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@3f3afe78 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@7f63425a is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@36d64342 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@36d64342 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@39ba5a14 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@511baa65
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@340f438e is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@340f438e has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@30c7da1e is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@5b464ce8 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@57829d67 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@19dfb72a is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@17c68925 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@17c68925 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@7e0ea639 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@3d24753a
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@59a6e353 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@59a6e353 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@7a0ac6e3 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@71be98f5 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@6fadae5d is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@17f6480 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@2d6e8792 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2d6e8792 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@2812cbfa is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@2acf57e3
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@506e6d5e is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@506e6d5e has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@96532d6 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@3796751b is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@67b64c45 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@4411d970 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@6442b0a6 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@6442b0a6 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@60f82f98 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12+\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((68)^((1)/(2))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((68)^((1)/(2))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@35f983a6
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@7f690630 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@7f690630 has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@edf4efb is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@2f7a2457 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.AddCruncherEqual@566776ad is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@6108b2d7 is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((68)^((1)/(2)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((68)^((1)/(2)))))
ACSD 0 deno is 1 of ((-12)+((68)^((1)/(2))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((68)^((1)/(2))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@1554909b is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN dealt : (((-12)+((68)^(((1)^(1))/((2)^(1)))))/(-2))
DCSN listadd(((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@1554909b has brought me a new dirty child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((68)^(((1)^(1))/((2)^(1)))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@6bf256fa is messing around now.
on child ((((-12)+((68)^((1)/(2))))/(-2))=(x))
into val 0
ComputeSearcher loop 4 end bestHf 11 bestChildHf 11 open size 20 closed size 0
No more children
ComputeSearcher loop 1 start ,bestHf 29 bestChildHf -1 open size 1 closed size 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((12))^(2))+((-4)*((-1))*((-19))))
State \\\frac{-\sqrt{12^2-4\\\cdot (-1)\\\cdot (-19)}-12)}{2\\\cdot (-1)}=x propagating
I'm (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x)) and I'm about to propagate.
EqEx : ((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1)))) is suggesting alterators now.
nouth.les.AlteratorMulti@6cd8737
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@22f71333 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@13969fbe is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex ((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex ((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.PowerCruncherExpand@6aaa5eb0 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 1
nouth.les.PowerCruncherExpand@6aaa5eb0 has brought me a new dirty child : (((((-1)*(((((12))*((12)))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
State polishing child : (((((-1)*(((((12))*((12)))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
nouth.les.AddCruncherEqual@3498ed is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@1a407d53 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex ((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex ((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.AddCruncherEqual@3d8c7aca is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@5ebec15 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex ((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex ((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPlain@21bcffb5 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherExpand@380fb434 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
{{{w*r = ((-1)*(-19))
{{{t = ((-1)*(-19))
Templist : ((-1)*(-19))
{{{current result = (((-1)*(-19)))
{{{((-1)*(-19)*(-4)) (multied by) (-4)
(((-1)*(-19)*(-4))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((12))
{{{((-1)*(12)) (multied by) (-1)
(((-1)*(12))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
{{{((-1)*(2)) (multied by) (2)
(((-1)*(2))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 3
nouth.les.MultiCruncherExpand@380fb434 has brought me a new dirty child : (((((-1)*(((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherDivs@668bc3d5 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
mcd worklist (-4)
mcd worklist ((-1))
mcd worklist ((-19))
mcd worklist (-1)
mcd worklist (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
mcd worklist (-1)
mcd worklist ((12))
mcd worklist (2)
mcd worklist ((-1))
into val 0
nouth.les.MultiCruncherNumerator@3cda1055 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPowerise@7a5d012c is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
MCP adding (-4)
MCP adding ((-1))
MCP adding ((-19))
MCP res ((-4)*((-1))*((-19)))
MCP adding (-1)
MCP adding (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
MCP res ((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))
MCP adding (-1)
MCP adding ((12))
MCP res ((-1)*((12)))
MCP adding (2)
MCP adding ((-1))
MCP res ((2)*((-1)))
into val 4
nouth.les.MultiCruncherPowerise@7a5d012c has brought me a new dirty child : (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
State polishing child : (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
nouth.les.AddCruncherEqual@3fb6a447 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@79b4d0f is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex ((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex ((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@6b2fad11 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1)))))+((-1)*((12))))/((2)*((-1))))
DCSN dealt : ((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1)))))+((-1)*((12))))/((2)*((-1))))
DCSN listadd((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1)))))+((-1)*((12))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@6b2fad11 has brought me a new dirty child : ((((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1)))))+((-1)*((12))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1)))))+((-1)*((12))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@79698539 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.PowerCruncherExpand@73f792cf is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 1
nouth.les.PowerCruncherExpand@73f792cf has brought me a new dirty child : (((((-1)*(((((12))*((12)))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
State polishing child : (((((-1)*(((((12))*((12)))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
nouth.les.MultiCruncherPlain@2ed94a8b is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherExpand@38082d64 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
{{{w*r = ((-1)*(-19))
{{{t = ((-1)*(-19))
Templist : ((-1)*(-19))
{{{current result = (((-1)*(-19)))
{{{((-1)*(-19)*(-4)) (multied by) (-4)
(((-1)*(-19)*(-4))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((12))
{{{((-1)*(12)) (multied by) (-1)
(((-1)*(12))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
{{{((-1)*(2)) (multied by) (2)
(((-1)*(2))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 3
nouth.les.MultiCruncherExpand@38082d64 has brought me a new dirty child : (((((-1)*(((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherDivs@dfd3711 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
mcd worklist (-4)
mcd worklist ((-1))
mcd worklist ((-19))
mcd worklist (-1)
mcd worklist (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
mcd worklist (-1)
mcd worklist ((12))
mcd worklist (2)
mcd worklist ((-1))
into val 0
nouth.les.MultiCruncherNumerator@42d3bd8b is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPowerise@26ba2a48 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
MCP adding (-4)
MCP adding ((-1))
MCP adding ((-19))
MCP res ((-4)*((-1))*((-19)))
MCP adding (-1)
MCP adding (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
MCP res ((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))
MCP adding (-1)
MCP adding ((12))
MCP res ((-1)*((12)))
MCP adding (2)
MCP adding ((-1))
MCP res ((2)*((-1)))
into val 4
nouth.les.MultiCruncherPowerise@26ba2a48 has brought me a new dirty child : (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
State polishing child : (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
nouth.les.AddCruncherEqual@5f2050f6 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@3b81a1bc is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex ((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex ((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPlain@64616ca2 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherExpand@13fee20c is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
{{{w*r = ((-1)*(-19))
{{{t = ((-1)*(-19))
Templist : ((-1)*(-19))
{{{current result = (((-1)*(-19)))
{{{((-1)*(-19)*(-4)) (multied by) (-4)
(((-1)*(-19)*(-4))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((12))
{{{((-1)*(12)) (multied by) (-1)
(((-1)*(12))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
{{{((-1)*(2)) (multied by) (2)
(((-1)*(2))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 3
nouth.les.MultiCruncherExpand@13fee20c has brought me a new dirty child : (((((-1)*(((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherDivs@4e04a765 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
mcd worklist (-4)
mcd worklist ((-1))
mcd worklist ((-19))
mcd worklist (-1)
mcd worklist (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
mcd worklist (-1)
mcd worklist ((12))
mcd worklist (2)
mcd worklist ((-1))
into val 0
nouth.les.MultiCruncherNumerator@783e6358 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPowerise@17550481 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
MCP adding (-4)
MCP adding ((-1))
MCP adding ((-19))
MCP res ((-4)*((-1))*((-19)))
MCP adding (-1)
MCP adding (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
MCP res ((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))
MCP adding (-1)
MCP adding ((12))
MCP res ((-1)*((12)))
MCP adding (2)
MCP adding ((-1))
MCP res ((2)*((-1)))
into val 4
nouth.les.MultiCruncherPowerise@17550481 has brought me a new dirty child : (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
State polishing child : (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
nouth.les.AddCruncherEqual@735f7ae5 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@180bc464 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex ((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex ((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.AddCruncherEqual@1324409e is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
ACE rwif (((((12)))^(2)))
ACE rwif ((((-1)))*(((-19))))
ACE rwif (((((12)))^(2)))
comparing(((((12)))^(2))) to ((((-1)))*(((-19))))
ACE rwif ()
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
ACE rwif ((((12))))
ACE rwif (((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2))))
comparing(((((1)*((((12)))^(2)))+((-4)*(((-1)))*(((-19)))))^((1)/(2)))) to ((((12))))
ACE rwif ()
into val 0
nouth.les.AddCruncherSingleDenominator@2c6a3f77 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex (2)
ACSD 0 not addex (((12))^(2))
ACSD 0 not addex (-4)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex (-19)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-19)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-19))
ACSD 0 deno is 1 of ((-19))
ACSD 0 not addex ((-4)*((-1))*((-19)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of ((((12))^(2))+((-4)*((-1))*((-19))))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
ACSD 0 not addex ((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12))
ACSD 0 deno is 1 of ((12))
ACSD 0 not addex ((-1)*((12)))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))
ACSD 0 not addex (2)
ACSD 0 not addex (-1)
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(1))/(1))
ACSD 0 deno is 1 of ((-1))
ACSD 0 not addex ((2)*((-1)))
ACSD 0 not addex ((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPlain@246ae04d is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherExpand@62043840 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-1)
{{{w*r = ((-1)*(-19))
{{{t = ((-1)*(-19))
Templist : ((-1)*(-19))
{{{current result = (((-1)*(-19)))
{{{((-1)*(-19)*(-4)) (multied by) (-4)
(((-1)*(-19)*(-4))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((12))
{{{((-1)*(12)) (multied by) (-1)
(((-1)*(12))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
{{{starting result = ((-1))
{{{((-1)*(2)) (multied by) (2)
(((-1)*(2))) is the result.
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 3
nouth.les.MultiCruncherExpand@62043840 has brought me a new dirty child : (((((-1)*(((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12))^(2))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherDivs@5315b42e is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
mcd worklist (-4)
mcd worklist ((-1))
mcd worklist ((-19))
mcd worklist (-1)
mcd worklist (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
mcd worklist (-1)
mcd worklist ((12))
mcd worklist (2)
mcd worklist ((-1))
into val 0
nouth.les.MultiCruncherNumerator@2ef9b8bc is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5d624da6 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
MCP adding (-4)
MCP adding ((-1))
MCP adding ((-19))
MCP res ((-4)*((-1))*((-19)))
MCP adding (-1)
MCP adding (((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2)))
MCP res ((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))
MCP adding (-1)
MCP adding ((12))
MCP res ((-1)*((12)))
MCP adding (2)
MCP adding ((-1))
MCP res ((2)*((-1)))
into val 4
nouth.les.MultiCruncherPowerise@5d624da6 has brought me a new dirty child : (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
State polishing child : (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
nouth.les.DivCruncherSimplifyNew@1e67b872 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1)))))+((-1)*((12))))/((2)*((-1))))
DCSN dealt : ((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1)))))+((-1)*((12))))/((2)*((-1))))
DCSN listadd((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1)))))+((-1)*((12))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@1e67b872 has brought me a new dirty child : ((((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1)))))+((-1)*((12))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^(((1)^(1))/((2)^(1)))))+((-1)*((12))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@60addb54 is messing around now.
on child (((((-1)*(((((12))^(2))+((-4)*((-1))*((-19))))^((1)/(2))))+((-1)*((12))))/((2)*((-1))))=(x))
into val 0
ComputeSearcher loop 1 end bestHf 29 bestChildHf 24 open size 1 closed size 0
ComputeSearcher loop 2 start ,bestHf 24 bestChildHf -1 open size 12 closed size 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)*(12)))
State \\\frac{-\sqrt{--19)\\\cdot (-4)+12\\\cdot 12}-12}{-1)\\\cdot 2}=x propagating
I'm (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@3f2a3a5
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@4cb2c100 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@4cb2c100 has brought me a new dirty child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@6fb554cc is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@614c5515 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@77b52d12 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@2d554825 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2)))
MCP res ((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 5
nouth.les.MultiCruncherPowerise@2d554825 has brought me a new dirty child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@68837a77 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@68837a77 has brought me a new dirty child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@6be46e8f is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@3567135c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@327471b5 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4157f54e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2)))
MCP res ((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 5
nouth.les.MultiCruncherPowerise@4157f54e has brought me a new dirty child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@90f6bfd is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
comparing(((((68)))^((1)/(2)))) to ()
into val 1
nouth.les.AddCruncherEqual@90f6bfd has brought me a new dirty child : (((((-1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherSingleDenominator@47f6473 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (12)
ACSD 0 not addex ((12)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)*(12)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@15975490 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@15975490 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@6b143ee9 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@1936f0f5 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@6615435c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@6615435c has brought me a new dirty child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@4909b8da is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@3a03464 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@2d3fcdbd is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@617c74e5 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2)))
MCP res ((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 5
nouth.les.MultiCruncherPowerise@617c74e5 has brought me a new dirty child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@6537cf78 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@6537cf78 has brought me a new dirty child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@67b6d4ae is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@34b7bfc0 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@366e2eef is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@6df97b55 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2)))
MCP res ((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 5
nouth.les.MultiCruncherPowerise@6df97b55 has brought me a new dirty child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@3cbbc1e0 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
comparing(((((68)))^((1)/(2)))) to ()
into val 1
nouth.les.AddCruncherEqual@3cbbc1e0 has brought me a new dirty child : (((((-1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherSingleDenominator@35fb3008 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (12)
ACSD 0 not addex ((12)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)*(12)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@7225790e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@7225790e has brought me a new dirty child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@54a097cc is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@36f6e879 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@5a61f5df is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@3551a94 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2)))
MCP res ((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 5
nouth.les.MultiCruncherPowerise@3551a94 has brought me a new dirty child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@531be3c5 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@531be3c5 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@52af6cff is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{-\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@735b478
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@2c9f9fb0 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@2c9f9fb0 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@2096442d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@9f70c54 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@234bef66 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@737996a0 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@737996a0 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@61dc03ce is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@61dc03ce has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@50f8360d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@2cb4c3ab is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@13c78c0b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@13c78c0b has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@12843fce is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@3dd3bcd is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@3dd3bcd has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@97e1986 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@97e1986 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@26f67b76 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@153f5a29 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@7f560810 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@69d9c55 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@69d9c55 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@13a57a3b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@13a57a3b has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@7ca48474 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@337d0578 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@59e84876 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@61a485d2 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@61a485d2 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@39fb3ab6 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@6276ae34 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@7946e1f4 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@7946e1f4 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@3c09711b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5cc7c2a6 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@b97c004 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4590c9c3 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@4590c9c3 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@32e6e9c3 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@32e6e9c3 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@5056dfcb is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{-\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@6574b225
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@2669b199 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@2669b199 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@2344fc66 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@458ad742 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@5afa04c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@6ea12c19 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@6ea12c19 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@6a024a67 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@6a024a67 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@7921b0a2 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@174d20a is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@66d2e7d9 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@66d2e7d9 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@1efbd816 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@6a2bcfcb is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@6a2bcfcb has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@4de8b406 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@4de8b406 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@3c756e4d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@7c0e2abd is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@48eff760 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@402f32ff is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@402f32ff has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@573f2bb1 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@573f2bb1 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@5ae9a829 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@6d8a00e3 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@548b7f67 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@7ac7a4e4 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@7ac7a4e4 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@6d78f375 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@50c87b21 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@5f375618 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@5f375618 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@1810399e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@32d992b2 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@215be6bb is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4439f31e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@4439f31e has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@5dfcfece is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@5dfcfece has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@23ceabc1 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{-\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@5d5eef3d
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@56f4468b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@56f4468b has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@6cc4c815 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@3a82f6ef is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@100fc185 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@643b1d11 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@643b1d11 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@2ef5e5e3 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@2ef5e5e3 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@36d4b5c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@6d00a15d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@51efea79 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@51efea79 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@5034c75a is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@396a51ab is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@396a51ab has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@51081592 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@51081592 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@7f9a81e8 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@9629756 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@62ee68d8 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@735b5592 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@735b5592 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@58651fd0 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@58651fd0 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@4520ebad is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5419f379 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@7dc7cbad is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@d2cc05a is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@d2cc05a has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@4f933fd1 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@548a9f61 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@1753acfe is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@1753acfe has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@7c16905e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@2a2d45ba is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@2a5ca609 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@20e2cbe0 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@20e2cbe0 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@68be2bc2 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@68be2bc2 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@28feb3fa is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)*(12)))
State \\\frac{-\sqrt{--19)\\\cdot (-4)+12\\\cdot 12}-12}{-1)\\\cdot 2}=x propagating
I'm (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@675d3402
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@51565ec2 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@51565ec2 has brought me a new dirty child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@482f8f11 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@1593948d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@1b604f19 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@7823a2f9 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2)))
MCP res ((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 5
nouth.les.MultiCruncherPowerise@7823a2f9 has brought me a new dirty child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@4cc0edeb is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@4cc0edeb has brought me a new dirty child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@457e2f02 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5c7fa833 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@39aeed2f is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@724af044 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2)))
MCP res ((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 5
nouth.les.MultiCruncherPowerise@724af044 has brought me a new dirty child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@4678c730 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
comparing(((((68)))^((1)/(2)))) to ()
into val 1
nouth.les.AddCruncherEqual@4678c730 has brought me a new dirty child : (((((-1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherSingleDenominator@6767c1fc is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (12)
ACSD 0 not addex ((12)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)*(12)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@29ee9faa is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@29ee9faa has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@c038203 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@cc285f4 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@55f3ddb1 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@55f3ddb1 has brought me a new dirty child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@8bd1b6a is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@18be83e4 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@cb5822 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4b9e13df is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2)))
MCP res ((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 5
nouth.les.MultiCruncherPowerise@4b9e13df has brought me a new dirty child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@2b98378d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@2b98378d has brought me a new dirty child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@475530b9 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@1d057a39 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@26be92ad is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4c70fda8 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2)))
MCP res ((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 5
nouth.les.MultiCruncherPowerise@4c70fda8 has brought me a new dirty child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@224edc67 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
comparing(((((68)))^((1)/(2)))) to ()
into val 1
nouth.les.AddCruncherEqual@224edc67 has brought me a new dirty child : (((((-1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((68)))^((1)/(2))))+((-12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherSingleDenominator@14acaea5 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (12)
ACSD 0 not addex ((12)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)*(12))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)*(12)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@46d56d67 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 4
nouth.les.MultiCruncherPlain@46d56d67 has brought me a new dirty child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((144)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@d8355a8 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@59fa1d9b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (12)
mcd worklist (12)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@28d25987 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4501b7af is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (12)
MCP res (((12)^(2)))
MCP adding (-1)
MCP adding (((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2)))
MCP res ((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 5
nouth.les.MultiCruncherPowerise@4501b7af has brought me a new dirty child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*(((((12)^(2)))+((-1)*(-19)*(-4)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@523884b2 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@523884b2 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@5b275dab is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{-\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@61832929
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@29774679 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@29774679 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@3ffc5af1 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5e5792a0 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@26653222 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@3532ec19 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@3532ec19 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@68c4039c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@68c4039c has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@ae45eb6 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@59f99ea is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@27efef64 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@27efef64 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@6f7fd0e6 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@47c62251 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@47c62251 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@3e6fa38a is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@3e6fa38a has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@66a3ffec is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@77caeb3e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@1e88b3c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@42d80b78 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@42d80b78 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@3bfdc050 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@3bfdc050 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@1bce4f0a is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5e3a8624 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@5c3bd550 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@91161c7 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@91161c7 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@604ed9f0 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@6a4f787b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@685cb137 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@685cb137 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@6a41eaa2 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@7cd62f43 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@6d4b1c02 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@6093dd95 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@6093dd95 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@5622fdf is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@5622fdf has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@4883b407 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{-\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@7d9d1a19
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@39c0f4a is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@39c0f4a has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@1794d431 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@42e26948 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@57baeedf is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@343f4d3d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@343f4d3d has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@53b32d7 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@53b32d7 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@5442a311 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@548e7350 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@1a968a59 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@1a968a59 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@4667ae56 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@77cd7a0 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@77cd7a0 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@204f30ec is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@204f30ec has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@e25b2fe is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@754ba872 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@146ba0ac is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4dfa3a9d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@4dfa3a9d has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@6eebc39e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@6eebc39e has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@464bee09 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@f6c48ac is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@13deb50e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@239963d8 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@239963d8 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@3abbfa04 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@57fffcd7 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@31ef45e3 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@31ef45e3 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@598067a5 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@3c0ecd4b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@14bf9759 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5f341870 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@5f341870 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@553f17c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@553f17c has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@4f7d0008 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{-\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@271053e1
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@589838eb is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@589838eb has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@42dafa95 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@6500df86 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@402a079c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@59ec2012 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@59ec2012 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@4cf777e8 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@4cf777e8 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@2f686d1f is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@3fee9989 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@73ad2d6 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@73ad2d6 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@7085bdee is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@1ce92674 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@1ce92674 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@5700d6b1 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@5700d6b1 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@6fd02e5 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5bcab519 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@e45f292 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5f2108b5 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@5f2108b5 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@31a5c39e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@31a5c39e has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@3f49dace is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@1e397ed7 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@490ab905 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@56ac3a89 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@56ac3a89 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@27c20538 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@72d818d1 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@6e06451e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@6e06451e has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@59494225 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@6e1567f1 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@5cb9f472 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@cb644e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@cb644e has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@13805618 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@13805618 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@56ef9176 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{-\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@4566e5bd
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@1ed4004b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@1ed4004b has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@ff5b51f is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@25bbe1b6 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@5702b3b1 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@69ea3742 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@69ea3742 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@4b952a2d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@4b952a2d has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@3159c4b8 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@73846619 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@4bec1f0c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@4bec1f0c has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@29ca901e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@5649fd9b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@5649fd9b has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@6adede5 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@6adede5 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@2d928643 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5025a98f is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@49993335 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@20322d26 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@20322d26 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@192b07fd is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@192b07fd has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@64bfbc86 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@64bf3bbf is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@55d56113 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@148080bb is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@148080bb has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@dc24521 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@10bdf5e5 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@6e1ec318 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@6e1ec318 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@7e0b0338 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@617faa95 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@1e127982 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@60c6f5b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@60c6f5b has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@2038ae61 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@2038ae61 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@3c0f93f1 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{-\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@31dc339b
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@544fe44c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@544fe44c has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@31610302 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@71318ec4 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@21213b92 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@a67c67e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@a67c67e has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@3327bd23 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@3327bd23 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@4e1d422d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@66480dd7 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@52a86356 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@52a86356 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@5ce81285 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@78c03f1f is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@78c03f1f has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@5ec0a365 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@5ec0a365 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@4fe3c938 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5383967b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@2ac273d3 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@71423665 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@71423665 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@20398b7c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@20398b7c has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@6fc6f14e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@56235b8e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@3632be31 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5abca1e0 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@5abca1e0 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@2286778 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@4e9ba398 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@6d7b4f4c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@6d7b4f4c has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@527740a2 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@13a5fe33 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@3108bc is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@370736d9 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@370736d9 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@5f9d02cb is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@5f9d02cb has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@63753b6d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{-\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@6b09bb57
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@6536e911 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@6536e911 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@520a3426 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@18eed359 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@3e9b1010 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@6c3708b3 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@6c3708b3 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@6f1fba17 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@6f1fba17 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@185d8b6 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@67784306 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@335eadca is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@335eadca has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@210366b4 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@eec5a4a is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@eec5a4a has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@2b2948e2 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@2b2948e2 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@6ddf90b0 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@57536d79 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@3b0143d3 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5a8e6209 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@5a8e6209 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@4b4523f8 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@4b4523f8 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@731a74c is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@369f73a2 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@1f28c152 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@7d907bac is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@7d907bac has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@7791a895 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@3a5ed7a6 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@6325a3ee is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@6325a3ee has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@1d16f93d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@67b92f0a is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@2b9627bc is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@65e2dbf3 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@65e2dbf3 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@4f970963 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@4f970963 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@61f8bee4 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-1)*(-19)*(-4))+((12)^(2)))
State \\\frac{-\sqrt{--19)\\\cdot (-4)+12^2}-12}{-1)\\\cdot 2}=x propagating
I'm (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@7b49cea0
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.MultiCruncherPlain@887af79 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@887af79 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@7fac631b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5b87ed94 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@6e0e048a is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5bc79255 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@5bc79255 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.PowerCruncherExpand@47ef968d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@47ef968d has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@23e028a9 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@3dd4520b is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@5ae63ade is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@5ae63ade has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@610694f1 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@43814d18 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 1
nouth.les.PowerCruncherExpand@43814d18 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)*(12)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@5c5a1b69 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@5c5a1b69 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@3701eaf6 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@627551fb is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@2b552920 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@2758fe70 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@2758fe70 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.MultiCruncherPlain@1f36e637 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@1f36e637 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@578486a3 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@551aa95a is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@35d176f7 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@1dfe2924 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@1dfe2924 has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@6ebc05a6 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((12)^(2)))
ACE rwif ()
comparing() to (((12)^(2)))
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
ACE rwif ()
ACE rwif (((((-76))+((1)*((12)^(2))))^((1)/(2))))
comparing(((((-76))+((1)*((12)^(2))))^((1)/(2)))) to ()
into val 0
nouth.les.AddCruncherSingleDenominator@6e6c3152 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
ACSD 0 not addex (-1)
ACSD 0 not addex (-1)
ACSD 0 not addex (-19)
ACSD 0 not addex (-4)
ACSD 0 not addex ((-1)*(-19)*(-4))
ACSD 0 not addex (12)
ACSD 0 not addex (2)
ACSD 0 not addex ((12)^(2))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((12)^(2))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*(-19)*(-4))+((12)^(2))))
ACSD 0 deno is 1 of (((-1)*(-19)*(-4))+((12)^(2)))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
ACSD 0 not addex ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
ACSD 0 not addex (-1)
ACSD 0 not addex (12)
ACSD 0 not addex ((-1)*(12))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12))))
ACSD 0 deno is 1 of (((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@50b494a6 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 3
nouth.les.MultiCruncherPlain@50b494a6 has brought me a new dirty child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
State polishing child : (((((-1)*((((-76))+((12)^(2)))^((1)/(2))))+((-12)))/((-2)))=(x))
nouth.les.MultiCruncherExpand@3cef309d is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@32709393 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist (-19)
mcd worklist (-4)
mcd worklist (-1)
mcd worklist ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
mcd worklist (-1)
mcd worklist (12)
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@3d99d22e is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@49fc609f is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding (-19)
MCP adding (-4)
MCP res ((-1)*(-19)*(-4))
MCP adding (-1)
MCP adding ((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2)))
MCP res ((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))
MCP adding (-1)
MCP adding (12)
MCP res ((-1)*(12))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 4
nouth.les.MultiCruncherPowerise@49fc609f has brought me a new dirty child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
State polishing child : (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@cd2dae5 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN dealt : ((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))/((-1)*(2)))
DCSN listadd((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@cd2dae5 has brought me a new dirty child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : ((((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^(((1)^(1))/((2)^(1)))))+((-1)*(12)))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@3a883ce7 is messing around now.
on child (((((-1)*((((-1)*(-19)*(-4))+((12)^(2)))^((1)/(2))))+((-1)*(12)))/((-1)*(2)))=(x))
into val 0
ComputeSearcher loop 2 end bestHf 24 bestChildHf 15 open size 12 closed size 0
ComputeSearcher loop 3 start ,bestHf 15 bestChildHf -1 open size 14 closed size 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12-\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@4973813a
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@6321e813 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@6321e813 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@79be0360 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@22a67b4 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@22a67b4 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@57855c9a is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@3b084709 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@3224f60b is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@63e2203c is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@1efed156 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist (((-76)+(144))^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@6737fd8f is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@72b6cbcc is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding (((-76)+(144))^((1)/(2)))
MCP res ((-1)*(((-76)+(144))^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@72b6cbcc has brought me a new dirty child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@a7e666 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@a7e666 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@68bbe345 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@30b8a058 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@30b8a058 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@7494e528 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12-\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@4bbfb90a
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@7c29daf3 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@7c29daf3 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@9660f4e is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@5a8806ef is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5a8806ef has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@6c49835d is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@5e853265 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@67205a84 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@7d0587f1 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5d76b067 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist (((-76)+(144))^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@2a17b7b6 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4f063c0a is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding (((-76)+(144))^((1)/(2)))
MCP res ((-1)*(((-76)+(144))^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@4f063c0a has brought me a new dirty child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@1e6d1014 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@1e6d1014 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@76707e36 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@614ddd49 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@614ddd49 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@1f554b06 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-1)\\\cdot 2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@694e1548
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@1c3a4799 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@1c3a4799 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@131276c2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@26aa12dd is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@3fd7a715 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 1
nouth.les.MultiCruncherPlain@3fd7a715 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
nouth.les.MultiCruncherExpand@711f39f9 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@71bbf57e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@7f13d6e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@51cdd8a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 2
nouth.les.MultiCruncherPowerise@51cdd8a has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@d44fc21 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@23faf8f2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@2d6eabae is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 1
nouth.les.MultiCruncherPlain@2d6eabae has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
nouth.les.MultiCruncherExpand@4e7dc304 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@64729b1e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@10bbd20a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@48503868 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 2
nouth.les.MultiCruncherPowerise@48503868 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@6895a785 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@6895a785 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@184f6be2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12-\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@56aac163
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@1f7030a6 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@1f7030a6 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@5a1c0542 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@396f6598 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@396f6598 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@394e1a0f is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@27a5f880 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@1d29cf23 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@5f282abb is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@167fdd33 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist (((-76)+(144))^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@1e965684 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4d95d2a2 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding (((-76)+(144))^((1)/(2)))
MCP res ((-1)*(((-76)+(144))^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@4d95d2a2 has brought me a new dirty child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@53f65459 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@53f65459 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@3b088d51 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@1786dec2 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@1786dec2 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@74650e52 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12-\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@15d0c81b
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@6acdbdf5 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@6acdbdf5 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@4b1c1ea0 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@17579e0f is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@17579e0f has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@4d41cee is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@3712b94 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@2833cc44 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@33f88ab is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@27a8c74e is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist (((-76)+(144))^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@2d8f65a4 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@1b68ddbd is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding (((-76)+(144))^((1)/(2)))
MCP res ((-1)*(((-76)+(144))^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@1b68ddbd has brought me a new dirty child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@646d64ab is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@646d64ab has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@59e5ddf is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@536aaa8d is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@536aaa8d has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@e320068 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-1)\\\cdot 2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@1f57539
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@76f2b07d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@76f2b07d has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@704a52ec is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@6ee52dcd is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@4493d195 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 1
nouth.les.MultiCruncherPlain@4493d195 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
nouth.les.MultiCruncherExpand@2781e022 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@57e1b0c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@4232c52b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@1877ab81 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 2
nouth.les.MultiCruncherPowerise@1877ab81 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@305fd85d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@458c1321 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@11438d26 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 1
nouth.les.MultiCruncherPlain@11438d26 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
nouth.les.MultiCruncherExpand@34cd072c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@7a1ebcd8 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@5faeada1 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@528931cf is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 2
nouth.les.MultiCruncherPowerise@528931cf has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@ea1a8d5 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@ea1a8d5 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@1563da5 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12-\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@2bbf4b8b
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@30a3107a is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@30a3107a has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@33c7e1bb is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@34c4973 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@34c4973 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@52feb982 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@7a765367 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@76b0bfab is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@17d677df is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@3043fe0e is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist (((-76)+(144))^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@78e67e0a is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@bd8db5a is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding (((-76)+(144))^((1)/(2)))
MCP res ((-1)*(((-76)+(144))^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@bd8db5a has brought me a new dirty child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@2f943d71 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@2f943d71 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@80503 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@4b553d26 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@4b553d26 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@69a3d1d is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12-\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@86be70a
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@480bdb19 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@480bdb19 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@2a556333 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@7d70d1b1 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@7d70d1b1 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@2a742aa2 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@3cb1ffe6 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@3dfc5fb8 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@467aecef is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@4d50efb8 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist (((-76)+(144))^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@7e2d773b is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@2173f6d9 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding (((-76)+(144))^((1)/(2)))
MCP res ((-1)*(((-76)+(144))^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@2173f6d9 has brought me a new dirty child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@307f6b8c is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@307f6b8c has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@7a187f14 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@6f195bc3 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@6f195bc3 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@51e2adc7 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12-\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@1a8a8f7c
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@2353b3e6 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@2353b3e6 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@631330c is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@42f93a98 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@42f93a98 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@c46bcd4 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@3234e239 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@3d921e20 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@36b4cef0 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@fad74ee is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist (((-76)+(144))^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@1a1d6a08 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@37d31475 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding (((-76)+(144))^((1)/(2)))
MCP res ((-1)*(((-76)+(144))^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@37d31475 has brought me a new dirty child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@27808f31 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@27808f31 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@436e852b is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@32d2fa64 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@32d2fa64 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@1d8d30f7 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-1)\\\cdot 2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@3e57cd70
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@9a7504c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@9a7504c has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@2c039ac6 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@587d1d39 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@58c1670b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 1
nouth.les.MultiCruncherPlain@58c1670b has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
nouth.les.MultiCruncherExpand@6b57696f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5bb21b69 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@6b9651f3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@38bc8ab5 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 2
nouth.les.MultiCruncherPowerise@38bc8ab5 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@687080dc is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@23d2a7e8 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@7a9273a8 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 1
nouth.les.MultiCruncherPlain@7a9273a8 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
nouth.les.MultiCruncherExpand@26a7b76d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@4abdb505 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@7ce6a65d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@1500955a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 2
nouth.les.MultiCruncherPowerise@1500955a has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@e874448 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@e874448 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@29b5cd00 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12-\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@60285225
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@7113b13f is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@7113b13f has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@45820e51 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@42d8062c is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@42d8062c has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@6043cd28 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@cb51256 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@59906517 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@5bfbf16f is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@25af5db5 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist (((-76)+(144))^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@12cdcf4 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5bcea91b is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding (((-76)+(144))^((1)/(2)))
MCP res ((-1)*(((-76)+(144))^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@5bcea91b has brought me a new dirty child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@5f3a4b84 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@5f3a4b84 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@27f723 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@670b40af is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@670b40af has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@4923ab24 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12-\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@44c8afef
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@7b69c6ba is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@7b69c6ba has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@46daef40 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@12f41634 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@12f41634 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@13c27452 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@262b2c86 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@371a67ec is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@5ed828d is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@50d0686 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist (((-76)+(144))^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@7a3d45bd is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@1e7c7811 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding (((-76)+(144))^((1)/(2)))
MCP res ((-1)*(((-76)+(144))^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@1e7c7811 has brought me a new dirty child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@77ec78b9 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@77ec78b9 has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@1a3869f4 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@a38d7a3 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@a38d7a3 has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@77f99a05 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-1)\\\cdot 2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2))) is suggesting alterators now.
nouth.les.AlteratorMulti@63440df3
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@3aeaafa6 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@3aeaafa6 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@76a3e297 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.PowerCruncherExpand@4d3167f4 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@ed9d034 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 1
nouth.les.MultiCruncherPlain@ed9d034 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
nouth.les.MultiCruncherExpand@6121c9d6 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@87f383f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@4eb7f003 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@eafc191 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 2
nouth.les.MultiCruncherPowerise@eafc191 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
nouth.les.AddCruncherEqual@612fc6eb is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@1060b431 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-1)
ACSD 0 not addex (2)
ACSD 0 not addex ((-1)*(2))
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPlain@612679d6 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 1
nouth.les.MultiCruncherPlain@612679d6 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-2)))=(x))
nouth.les.MultiCruncherExpand@11758f2a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@e720b71 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
mcd worklist (-1)
mcd worklist (2)
into val 0
nouth.les.MultiCruncherNumerator@1b26f7b2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
nouth.les.MultiCruncherPowerise@491cc5c9 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
MCP adding (-1)
MCP adding (2)
MCP res ((-1)*(2))
into val 2
nouth.les.MultiCruncherPowerise@491cc5c9 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
nouth.les.DivCruncherSimplifyNew@74ad1f1f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/((-1)*(2)))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
MCP adding (-1)
MCP adding (2)
MCP res (((-1)^(1))*((2)^(1)))
DCSN list is subexlist of (((-1)^(1))*((2)^(1)))
into val 2
nouth.les.DivCruncherSimplifyNew@74ad1f1f has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/(((-1)^(1))*((2)^(1))))=(x))
nouth.les.DivCruncherEmergeDivs@6a1aab78 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/((-1)*(2)))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : ((-76)+(144))
State \\\frac{-12-\sqrt{-76+144}}{-2}=x propagating
I'm ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@462d5aee
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.AddCruncherEqual@69b0fd6f is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@69b0fd6f has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@757942a1 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@4a87761d is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@4a87761d has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@66d1af89 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@8646db9 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@37374a5e is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@4671e53b is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@2db7a79b is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist (((-76)+(144))^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@6950e31 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@b7dd107 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding (((-76)+(144))^((1)/(2)))
MCP res ((-1)*(((-76)+(144))^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@b7dd107 has brought me a new dirty child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@42eca56e is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif ()
ACE rwif ()
comparing() to ()
ACE rwif ()
ACE rwif (((((68)))^((1)/(2))))
ACE rwif ()
comparing() to (((((68)))^((1)/(2))))
into val 1
nouth.les.AddCruncherEqual@42eca56e has brought me a new dirty child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
State polishing child : (((((-12))+((-1)*((((68)))^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherSingleDenominator@52f759d7 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (-76)
ACSD 0 not addex (144)
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-76)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (144)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-76)+(144)))
ACSD 0 deno is 1 of ((-76)+(144))
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex (((-76)+(144))^((1)/(2)))
ACSD 0 not addex ((-1)*(((-76)+(144))^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*(((-76)+(144))^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*(((-76)+(144))^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@7cbd213e is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@7cbd213e has brought me a new dirty child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*(((-76)+(144))^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@192d3247 is messing around now.
on child ((((-12)+((-1)*(((-76)+(144))^((1)/(2)))))/(-2))=(x))
into val 0
ComputeSearcher loop 3 end bestHf 15 bestChildHf 13 open size 14 closed size 0
ComputeSearcher loop 4 start ,bestHf 13 bestChildHf -1 open size 28 closed size 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@3ecd23d9
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@569cfc36 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@569cfc36 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@43bd930a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@33723e30 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@64f6106c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@553a3d88 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@7a30d1e6 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@5891e32e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@cb0ed20 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@cb0ed20 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@8e24743 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@74a10858 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@23fe1d71 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@23fe1d71 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@28ac3dc3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@32eebfca
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@4e718207 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@4e718207 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@1d371b2d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@543c6f6d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@13eb8acf is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@51c8530f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@7403c468 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@43738a82 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@c81cdd1 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@c81cdd1 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@1fc2b765 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@75881071 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@2a70a3d8 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2a70a3d8 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@289d1c02 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@22eeefeb
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@17d0685f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@17d0685f has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@3891771e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@78ac1102 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@2de8284b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@396e2f39 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@a74868d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@12c8a2c0 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@7e0e6aa2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@7e0e6aa2 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@365185bd is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@18bf3d14 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@4fb64261 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@4fb64261 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@42607a4f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@782663d3
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@1990a65e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@1990a65e has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@64485a47 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@25bbf683 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@6ec8211c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@7276c8cd is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@544a2ea6 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@2e3fc542 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@150c158 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@150c158 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@4524411f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@401e7803 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@10dba097 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@10dba097 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@1786f9d5 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@704d6e83
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@43a0cee9 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@43a0cee9 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@eb21112 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@2eda0940 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@3578436e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@706a04ae is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@6eceb130 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@10a035a0 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@67b467e9 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@67b467e9 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@47db50c5 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@5c072e3f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@4d1b0d2a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@4d1b0d2a has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@954b04f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@149494d8
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@710726a3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@710726a3 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@646007f4 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@481a15ff is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@78186a70 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@306279ee is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@545997b1 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@4cf4d528 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@77846d2c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@77846d2c has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@548ad73b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@4c762604 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@2641e737 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2641e737 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@727803de is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@704921a5
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@df27fae is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@df27fae has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@24a35978 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@16f7c8c1 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@2f0a87b3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@319b92f3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@fcd6521 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@27d415d9 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5c18298f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@5c18298f has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@31f924f5 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@5579bb86 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@5204062d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5204062d has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@4fcd19b3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@376b4233
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@2fd66ad3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2fd66ad3 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@5d11346a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@7a36aefa is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@17211155 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@b3d7190 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@5fdba6f9 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@10d59286 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@fe18270 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@fe18270 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@6fb0d3ed is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@6dde5c8c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@5123a213 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5123a213 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@52525845 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@3b94d659
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@24b1d79b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@24b1d79b has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@68ceda24 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@281e3708 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@35a50a4c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@1f021e6c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@103f852 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@587c290d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4516af24 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@4516af24 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@4ae82894 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@543788f3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@6d3af739 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@6d3af739 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@1da51a35 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@16022d9d
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@7e9a5fbe is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@7e9a5fbe has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@44a3ec6b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@71623278 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@768b970c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@5a4041cc is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@15b3e5b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@61ca2dfa is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4b53f538 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@4b53f538 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@134593bf is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@4bb4de6a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@7ba18f1b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@7ba18f1b has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@2f8f5f62 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@1068e947
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@7dc222ae is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@7dc222ae has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@aecb35a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@5fcd892a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@8b87145 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@6483f5ae is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@b9afc07 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@382db087 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@73d4cc9e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@73d4cc9e has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@80169cf is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@5427c60c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@15bfd87 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@15bfd87 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@543e710e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@57f23557
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@3d0f8e03 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@3d0f8e03 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@6366ebe0 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@44f75083 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@2698dc7 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@43d7741f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@17baae6e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@69379752 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@27fe3806 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@27fe3806 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@5f71c76a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@1d7acb34 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@48a242ce is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@48a242ce has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@1e4a7dd4 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@4f51b3e0
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@4b9e255 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@4b9e255 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@5e57643e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@133e16fd is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@51b279c9 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@1ad282e0 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@7f416310 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@1cab0bfb is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@5e955596 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@5e955596 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@50de0926 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@2473b9ce is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@60438a68 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@60438a68 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@140e5a13 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@3439f68d
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@dbd940d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@dbd940d has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@71d15f18 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@17695df3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@6c9f5c0d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@de3a06f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@76b10754 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@2bea5ab4 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@3d8314f0 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@3d8314f0 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@2df32bf7 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@530612ba is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@2a40cd94 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2a40cd94 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@f4168b8 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@3bd94634
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@58a90037 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@58a90037 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@74294adb is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@70a9f84e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@130f889 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@1188e820 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@2f490758 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@101df177 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@166fa74d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@166fa74d has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@40f08448 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@276438c9 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@588df31b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@588df31b has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@33b37288 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@77a57272
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@7181ae3f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@7181ae3f has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@46238e3f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@6e2c9341 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@32464a14 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@4e4aea35 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@1442d7b5 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@1efee8e7 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@1ee807c6 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@1ee807c6 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@76a4d6c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@517cd4b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@6cc7b4de is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@6cc7b4de has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@32cf48b7 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@679b62af
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@5cdd8682 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5cdd8682 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@d6da883 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@45afc369 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@799d4f69 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@49c43f4e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@290dbf45 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@12028586 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@17776a8 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@17776a8 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@69a10787 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@2d127a61 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@2bbaf4f0 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2bbaf4f0 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@11c20519 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@70beb599
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@4e41089d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@4e41089d has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@32a068d1 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@33cb5951 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@365c30cc is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@701fc37a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@4148db48 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@282003e1 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@7fad8c79 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@7fad8c79 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@71a794e5 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@76329302 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@5e25a92e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5e25a92e has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@4df828d7 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@b59d31
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@62fdb4a6 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@62fdb4a6 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@11e21d0e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@1dd02175 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@31206beb is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@3e77a1ed is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@3ffcd140 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@23bb8443 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@1176dcec is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@1176dcec has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@120d6fe6 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@4ba2ca36 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@3444d69d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@3444d69d has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@1372ed45 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@6a79c292
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@37574691 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@37574691 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@25359ed8 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@21a947fe is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@5606c0b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@80ec1f8 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@1445d7f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@6a396c1e is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@6c3f5566 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@6c3f5566 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@12405818 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@314c508a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@10b48321 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@10b48321 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@6b67034 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@16267862
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@453da22c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@453da22c has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@71248c21 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@442675e1 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@6166e06f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@49e202ad is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@1c72da34 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@6b0c2d26 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@3d3fcdb0 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@3d3fcdb0 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@641147d0 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@6e38921c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@64d7f7e0 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@64d7f7e0 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@27c6e487 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@49070868
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@6385cb26 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@6385cb26 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@38364841 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@28c4711c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@59717824 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@146044d7 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@1e9e725a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@15d9bc04 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@473b46c3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@473b46c3 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@516be40f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@3c0a50da is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@646be2c3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@646be2c3 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@797badd3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@77be656f
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@19dc67c2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@19dc67c2 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@221af3c0 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@62bd765 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@23a5fd2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@78a2da20 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@dd3b207 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@551bdc27 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@58fdd99 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@58fdd99 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@6b1274d2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@7bc1a03d is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@70b0b186 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@70b0b186 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@ba8d91c is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@7364985f
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@5d20e46 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5d20e46 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@709ba3fb is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@3d36e4cd is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@6a472554 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@7ff2a664 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@525b461a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@58c1c010 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@b7f23d9 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@b7f23d9 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@61d47554 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@69b794e2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@3f200884 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@3f200884 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@4d339552 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@f0f2775
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@5a4aa2f2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@5a4aa2f2 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@6591f517 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@345965f2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@429bd883 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@4d49af10 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@279ad2e3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@58134517 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4450d156 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@4450d156 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@4461c7e3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@351d0846 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@77e4c80f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@77e4c80f has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@35fc6dc4 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@7fe8ea47
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@226a82c4 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@226a82c4 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@731f8236 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@255b53dc is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@1dd92fe2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@6b53e23f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@64d2d351 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@1b68b9a4 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4f9a3314 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@4f9a3314 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@3b2c72c2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@491666ad is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@176d53b2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@176d53b2 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@971d0d8 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@51931956
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@2b4a2ec7 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@2b4a2ec7 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@564718df is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@51b7e5df is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@18a70f16 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@62e136d3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@c8e4bb0 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@6279cee3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@4206a205 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@4206a205 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@29ba4338 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@57175e74 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@7bb58ca3 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@7bb58ca3 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@c540f5a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
State \\\frac{-12-\sqrt{68}}{-2}=x propagating
I'm ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x)) and I'm about to propagate.
EqEx : (((-12)+((-1)*((68)^((1)/(2)))))/(-2)) is suggesting alterators now.
nouth.les.AlteratorMulti@770c2e6b
adding it.
EqEx : (x) is suggesting alterators now.
nouth.les.DivCruncherSimplifyNew@1a052a00 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@1a052a00 has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@4d826d77 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.PowerCruncherExpand@61009542 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPlain@77e9807f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherExpand@448ff1a8 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE addlist size 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
MCE target not multiex 0
into val 0
nouth.les.MultiCruncherDivs@1a38c59b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
mcd worklist (-1)
mcd worklist ((68)^((1)/(2)))
into val 0
nouth.les.MultiCruncherNumerator@7f77e91b is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.MultiCruncherPowerise@44a664f2 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
MCP adding (-1)
MCP adding ((68)^((1)/(2)))
MCP res ((-1)*((68)^((1)/(2))))
into val 1
nouth.les.MultiCruncherPowerise@44a664f2 has brought me a new dirty child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
State polishing child : ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
nouth.les.AddCruncherEqual@7f9fcf7f is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACE rwif ()
ACE rwif (((68)^((1)/(2))))
ACE rwif ()
comparing() to (((68)^((1)/(2))))
into val 0
nouth.les.AddCruncherSingleDenominator@2357d90a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
ACSD 0 not addex (-12)
ACSD 0 not addex (-1)
ACSD 0 not addex (68)
ACSD 0 not addex (1)
ACSD 0 not addex (2)
ACSD 0 not addex ((1)/(2))
ACSD 0 not addex ((68)^((1)/(2)))
ACSD 0 not addex ((-1)*((68)^((1)/(2))))
DCS start ((1)/(1))
DCS crossing out (1)
DCS after crossout before single plain :((1)) / ((1))
DCS single plain :((1)) / ((1))
DCS computing gcd from 1 and 1 = 1
DCS resulting ((1)/(1))
ACSD polished unide is (1)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (-12)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2)))))/(1))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (((-12)+((-1)*((68)^((1)/(2))))))
ACSD 0 deno is 1 of ((-12)+((-1)*((68)^((1)/(2)))))
ACSD 0 not addex (-2)
ACSD 0 not addex (((-12)+((-1)*((68)^((1)/(2)))))/(-2))
ACSD 0 not addex (x)
ACSD 0 not addex ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
nouth.les.DivCruncherSimplifyNew@6328d34a is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
DCSN in : ((1)/(2))
DCSN dealt : ((1)/(2))
DCSN listadd((1)^(1))
DCSN listadd((2)^(1))
DCSN in : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN dealt : (((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))/(-2))
DCSN listadd(((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))
DCSN listadd((-2)^(1))
into val 2
nouth.les.DivCruncherSimplifyNew@6328d34a has brought me a new dirty child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
State polishing child : (((((-12)+((-1)*((68)^(((1)^(1))/((2)^(1))))))^(1))/((-2)^(1)))=(x))
nouth.les.DivCruncherEmergeDivs@145eaa29 is messing around now.
on child ((((-12)+((-1)*((68)^((1)/(2)))))/(-2))=(x))
into val 0
ComputeSearcher loop 4 end bestHf 13 bestChildHf 13 open size 28 closed size 0
No more children
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
all values : \\\frac{-12+\sqrt{68}}{-2}=x
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
all values : \\\frac{-12-\sqrt{68}}{-2}=x
outputer found (((-19)+((-1)*((x)^(2)))+((12)*(x)))=(0))
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
Warning ! Replaceself attempt on an orphan Ex. Ignoring. I am : (68)
