><><><><><><><><><><>
BossExpression : [(((((1)*(6)*((3)+(g))))/((20))+(((3)+(g)))/((20))+(((3)+(g)))/((20))))]
target subEx         =(((1)*(6)*((3)+(g))))/((20))
Target subEx times 1 =(((1)*(1)*(6)*((3)+(g))))/((20))
gonna crunch (((1)*(1)*(6)*((3)+(g))))/((20))
MCPlain : START crunch
 looking at (1)
Worklist size not > 0 (actually :  0 ) or (1) not a plainEx. Adding it.
 looking at (1)
: It's a plainEx.
: multiplied .(1) by (1)
 looking at (6)
: It's a plainEx.
: multiplied .(6) by (1)
 looking at ((3)+(g))
Worklist size not > 0 (actually :  1 ) or ((3)+(g)) not a plainEx. Adding it.
ACPlain : END<<
But it is not a multiEx. Redirected crunch to it's first subEx  ((6)*((3)+(g)))
target subEx         =(((3)+(g)))/((20))
Target subEx times 1 =(((1)*(1)*((3)+(g))))/((20))
gonna crunch (((1)*(1)*((3)+(g))))/((20))
MCPlain : START crunch
 looking at (1)
Worklist size not > 0 (actually :  0 ) or (1) not a plainEx. Adding it.
 looking at (1)
: It's a plainEx.
: multiplied .(1) by (1)
 looking at ((3)+(g))
Worklist size not > 0 (actually :  1 ) or ((3)+(g)) not a plainEx. Adding it.
ACPlain : END<<
But it is not a multiEx. Redirected crunch to it's first subEx  ((1)*((3)+(g)))
comparing()/((20)) by ()/((20))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
target subEx         =((1)*((3)+(g)))
Target subEx times 1 =((1)*(1)*((3)+(g)))
gonna crunch ((1)*(1)*((3)+(g)))
MCPlain : START crunch
 looking at (1)
Worklist size not > 0 (actually :  0 ) or (1) not a plainEx. Adding it.
 looking at (1)
: It's a plainEx.
: multiplied .(1) by (1)
 looking at ((3)+(g))
Worklist size not > 0 (actually :  1 ) or ((3)+(g)) not a plainEx. Adding it.
ACPlain : END<<
post crunch ((1)*((3)+(g)))
target subEx         =((6)*((3)+(g)))
Target subEx times 1 =((1)*(6)*((3)+(g)))
gonna crunch ((1)*(6)*((3)+(g)))
MCPlain : START crunch
 looking at (1)
Worklist size not > 0 (actually :  0 ) or (1) not a plainEx. Adding it.
 looking at (6)
: It's a plainEx.
: multiplied .(6) by (1)
 looking at ((3)+(g))
Worklist size not > 0 (actually :  1 ) or ((3)+(g)) not a plainEx. Adding it.
ACPlain : END<<
post crunch ((6)*((3)+(g)))
comparing(((3)+(g))) by (((3)+(g)))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
Replacing (1) by (7)
--------------------------------------;; 
--------------------------------------;; 
target subEx         =(((3)+(g)))/((20))
Target subEx times 1 =(((1)*(1)*((3)+(g))))/((20))
gonna crunch (((1)*(1)*((3)+(g))))/((20))
MCPlain : START crunch
 looking at (1)
Worklist size not > 0 (actually :  0 ) or (1) not a plainEx. Adding it.
 looking at (1)
: It's a plainEx.
: multiplied .(1) by (1)
 looking at ((3)+(g))
Worklist size not > 0 (actually :  1 ) or ((3)+(g)) not a plainEx. Adding it.
ACPlain : END<<
But it is not a multiEx. Redirected crunch to it's first subEx  ((1)*((3)+(g)))
comparing()/((20)) by ()/((20))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
target subEx         =((1)*((3)+(g)))
Target subEx times 1 =((1)*(1)*((3)+(g)))
gonna crunch ((1)*(1)*((3)+(g)))
MCPlain : START crunch
 looking at (1)
Worklist size not > 0 (actually :  0 ) or (1) not a plainEx. Adding it.
 looking at (1)
: It's a plainEx.
: multiplied .(1) by (1)
 looking at ((3)+(g))
Worklist size not > 0 (actually :  1 ) or ((3)+(g)) not a plainEx. Adding it.
ACPlain : END<<
post crunch ((1)*((3)+(g)))
target subEx         =((7)*((3)+(g)))
Target subEx times 1 =((1)*(7)*((3)+(g)))
gonna crunch ((1)*(7)*((3)+(g)))
MCPlain : START crunch
 looking at (1)
Worklist size not > 0 (actually :  0 ) or (1) not a plainEx. Adding it.
 looking at (7)
: It's a plainEx.
: multiplied .(7) by (1)
 looking at ((3)+(g))
Worklist size not > 0 (actually :  1 ) or ((3)+(g)) not a plainEx. Adding it.
ACPlain : END<<
post crunch ((7)*((3)+(g)))
comparing(((3)+(g))) by (((3)+(g)))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
Replacing (1) by (8)
--------------------------------------;; 
--------------------------------------;; 
=====================
BossExpression : [((((((8)*((3)+(g)))))/((20))))]


