><><><><><><><><><><>
BossExpression : [((0)+((((3)+(g)))/((20))+(((3)+(g)))/((20))+(((3)+(g)))/((20))+((24)*(v))+(v)))]
Ex (((3)+(g)))/((20)) contains g !
Ex (((3)+(g)))/((20)) contains g !
Ex (((3)+(g)))/((20)) contains g !
Ex ((24)*(v)) contains v !
Ex (v) contains v !


Okay,not gonna multi (((3)+(g)))/((20))by 1
Crunching: (((3)+(g)))/((20))
MCPlain : START crunch
>>MCPlain : it ain't a MultiEx ! Returning 0.
post crunch (((3)+(g)))/((20))
But it is not a multiEx. Redirected crunch to it's first subEx  ((3)+(g))
MCPlain : START crunch
>>MCPlain : it ain't a MultiEx ! Returning 0.
>which is thus crunched into ((3)+(g))
Okay,not gonna multi (((3)+(g)))/((20))by 1
Crunching: (((3)+(g)))/((20))
MCPlain : START crunch
>>MCPlain : it ain't a MultiEx ! Returning 0.
post crunch (((3)+(g)))/((20))
But it is not a multiEx. Redirected crunch to it's first subEx  ((3)+(g))
MCPlain : START crunch
>>MCPlain : it ain't a MultiEx ! Returning 0.
>which is thus crunched into ((3)+(g))
Okay,not gonna multi (3)by 1
Crunching: ((1)*(3))
MCPlain : START crunch
>>MCPlain : Else ! Adding (1)
>>MCPlain : multiplied (3) by (1)
MCPlain : END<<
post crunch ((3))
Okay,not gonna multi ((3)+(g))by 1
Crunching: ((1)*((3)+(g)))
MCPlain : START crunch
>>MCPlain : Else ! Adding (1)
>>MCPlain : Else ! Adding ((3)+(g))
MCPlain : END<<
post crunch ((1)*((3)+(g)))
Okay,not gonna multi (g)by 1
Crunching: ((1)*(g))
MCPlain : START crunch
>>MCPlain : Else ! Adding (1)
>>MCPlain : Else ! Adding (g)
MCPlain : END<<
post crunch ((1)*(g))
Okay,not gonna multi (((3)+(g)))/((20))by 1
Crunching: (((3)+(g)))/((20))
MCPlain : START crunch
>>MCPlain : it ain't a MultiEx ! Returning 0.
post crunch (((3)+(g)))/((20))
But it is not a multiEx. Redirected crunch to it's first subEx  ((3)+(g))
MCPlain : START crunch
>>MCPlain : it ain't a MultiEx ! Returning 0.
>which is thus crunched into ((3)+(g))
Okay,not gonna multi ((24)*(v))by 1
Crunching: ((1)*(24)*(v))
MCPlain : START crunch
>>MCPlain : Else ! Adding (1)
>>MCPlain : multiplied (24) by (1)
>>MCPlain : Else ! Adding (v)
MCPlain : END<<
post crunch ((24)*(v))
Okay,not gonna multi (v)by 1
Crunching: ((1)*(v))
MCPlain : START crunch
>>MCPlain : Else ! Adding (1)
>>MCPlain : Else ! Adding (v)
MCPlain : END<<
post crunch ((1)*(v))
Okay,not gonna multi (1)by 1
Crunching: ((1)*(1))
MCPlain : START crunch
>>MCPlain : Else ! Adding (1)
>>MCPlain : multiplied (1) by (1)
MCPlain : END<<
post crunch ((1))
Okay,not gonna multi (24)by 1
Crunching: ((1)*(24))
MCPlain : START crunch
>>MCPlain : Else ! Adding (1)
>>MCPlain : multiplied (24) by (1)
MCPlain : END<<
post crunch ((24))
BossExpression : [((0)+((((3)+(g)))/((20))+(((3)+(g)))/((20))+(((3)+(g)))/((20))+((24)*(v))+(v)))]
=====================
BossExpression : [((0)+(((((1)*((3)+(g)))+((1)*(g))+((3))))/((20))+((((25)))*(v))+(((3)+(g)))/((20))))]
Ex ((((1)*((3)+(g)))+((1)*(g))+((3))))/((20)) contains g !
Ex ((((25)))*(v)) contains v !
Ex (((3)+(g)))/((20)) contains g !
Nest contains following variables :
g
v


